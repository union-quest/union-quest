{"version":3,"file":"map.svelte-bfb8ce84.js","sources":["../../../../../src/lib/components/styled/Modal.svelte","../../../../../src/lib/blockchain/WalletAccess.svelte","../../../../../../common-lib/lib/esm/index.js","../../../../../src/lib/utils/graphql/constants.ts","../../../../../src/lib/utils/graphql/endpoint.ts","../../../../../src/lib/blockchain/subgraph.ts","../../../../../src/lib/utils/stores/base.ts","../../../../../src/lib/utils/stores/graphql.ts","../../../../../src/lib/player/players.ts","../../../../../src/lib/village/villages.ts","../../../../../src/lib/item/items.ts","../../../../../src/lib/trust/trust.ts","../../../../../src/lib/components/DaiSymbol.svelte","../../../../../src/lib/components/Tile.svelte","../../../../../src/lib/components/JourneyInfo.svelte","../../../../../src/routes/map.svelte"],"sourcesContent":["<script lang=\"ts\">\n  import {createEventDispatcher, onDestroy} from 'svelte';\n  export let globalCloseButton = false;\n  export let closeButton = false;\n  export let title = '';\n  export let cancelable = true;\n\n  const dispatch = createEventDispatcher();\n  const close = () => cancelable && dispatch('close');\n\n  let modal: Element;\n\n  function handle_keydown(evt: KeyboardEvent | undefined) {\n    evt = evt || (window.event as KeyboardEvent);\n    var isEscape = false;\n    if ('key' in evt) {\n      isEscape = evt.key === 'Escape' || evt.key === 'Esc';\n    } else {\n      isEscape = (evt as KeyboardEvent).keyCode === 27;\n    }\n    if (isEscape) {\n      close();\n      return;\n    }\n\n    if (evt.key === 'Tab') {\n      // trap focus\n      const nodes = modal.querySelectorAll('*');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const tabbable = Array.from(nodes).filter((n: any) => n.tabIndex >= 0);\n\n      let index = -1;\n      if (document.activeElement) {\n        index = tabbable.indexOf(document.activeElement);\n      }\n      if (index === -1 && evt.shiftKey) index = 0;\n\n      index += tabbable.length + (evt.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      (tabbable[index] as HTMLElement).focus && (tabbable[index] as HTMLElement).focus();\n      evt.preventDefault();\n    }\n  }\n\n  const previously_focused = typeof document !== 'undefined' && document.activeElement;\n\n  if (previously_focused) {\n    onDestroy(() => {\n      const htmlElement = previously_focused as HTMLElement;\n      if (htmlElement.focus) {\n        htmlElement.focus();\n      }\n    });\n  }\n</script>\n\n<svelte:window on:keydown={handle_keydown} />\n\n<!-- container -->\n<div class=\"z-50 fixed w-full h-full top-0 left-0 flex items-center justify-center text-black dark:text-white\">\n  <!-- clickable dark overlay -->\n  <div on:click={close} class=\"absolute w-full h-full bg-gray-900 opacity-80\" />\n\n  <!--modal-->\n  <div\n    class=\"absolute border-2 w-11/12 md:max-w-md mx-auto overflow-y-auto max-h-screen dark:bg-black dark:border-2 dark:border-gray-800 bg-white\"\n  >\n    {#if globalCloseButton}\n      <div\n        on:click={close}\n        class=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-sm\"\n      >\n        <svg\n          class=\"fill-current text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n        >\n          <path\n            d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n          />\n        </svg>\n        <span class=\"text-sm\">(Esc)</span>\n      </div>\n    {/if}\n\n    <!-- Add margin if you want to see some of the overlay behind the modal-->\n    <div class=\"modal-content py-4 text-left px-6\" bind:this={modal}>\n      <div class=\"flex justify-between items-center\">\n        <!--Title-->\n        {#if title}\n          <p class=\"text-2xl font-bold\">{title}</p>\n        {/if}\n        {#if closeButton}\n          <div on:click={close} class=\"modal-close cursor-pointer z-50\">\n            <svg\n              class=\"fill-current text-black\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n              />\n            </svg>\n          </div>\n        {/if}\n      </div>\n\n      <!--Body-->\n      <slot />\n\n      <!--Footer-->\n      <div class=\"flex justify-end pt-2\">\n        <slot name=\"footer\" />\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  export let title = '';\n  import {chainId, chainName, fallbackProviderOrUrl, webWalletURL} from '$lib/config';\n  import NavButton from '$lib/components/styled/navigation/NavButton.svelte';\n  import Modal from '$lib/components/styled/Modal.svelte';\n  import {base} from '$app/paths';\n  import {wallet, builtin, chain, flow, fallback} from '$lib/blockchain/wallet';\n\n  $: executionError = $flow.executionError as any;\n\n  let options: {img: string; id: string; name: string}[] = [];\n  $: builtinNeedInstalation = $wallet.options.filter((v) => v === 'builtin' && !$builtin.available).length > 0;\n  $: options = $wallet.options\n    .filter((v) => v !== 'builtin' || $builtin.available)\n    .map((v) => {\n      return {\n        img: ((v) => {\n          if (v === 'builtin') {\n            if ($builtin.state === 'Ready') {\n              if ($builtin.vendor === 'Metamask') {\n                return 'images/metamask.svg';\n              } else if ($builtin.vendor === 'Opera') {\n                return 'images/opera.svg';\n              }\n            }\n            return 'images/web3-default.png';\n          } else {\n            if (v.startsWith('torus-')) {\n              const verifier = v.slice(6);\n              return `images/torus/${verifier}.svg`;\n            }\n            return `images/${v}.svg`;\n          }\n        })(v),\n        id: v,\n        name: v,\n      };\n    });\n\n  function acknowledgeNewGenesis() {\n    chain.acknowledgeNewGenesisHash();\n  }\n\n  async function switchChain() {\n    let blockExplorerUrls: string[] | undefined;\n    const explorerTXURL = import.meta.env.VITE_BLOCK_EXPLORER_TRANSACTION as string;\n    if (explorerTXURL) {\n      blockExplorerUrls.push(explorerTXURL.slice(0, explorerTXURL.length - 2));\n    }\n    const rpcUrls = [];\n    if (webWalletURL) {\n      rpcUrls.push(webWalletURL);\n    }\n    if (fallbackProviderOrUrl) {\n      rpcUrls.push(fallbackProviderOrUrl);\n    }\n    await chain.switchChain(chainId, {chainName, rpcUrls, blockExplorerUrls});\n  }\n</script>\n\n<slot />\n\n{#if $chain.state === 'Idle' && !$chain.connecting && $fallback.state === 'Idle' && !$fallback.connecting}\n  <!-- Not Used Here: No need of node connection -->\n  <!-- <div\n    class=\"w-full flex items-center justify-center fixed top-0 pointer-events-none\"\n    style=\"z-index: 5;\">\n    <p\n      class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Please Connect.\n    </p>\n  </div> -->\n{:else if $chain.state === 'Idle' && !$chain.connecting && $fallback.error}\n  <!-- Not Used Here: No need of node connection, we should check thegraph connection instead -->\n  <!-- <div\n    class=\"w-full flex items-center justify-center fixed top-0 pointer-events-none\"\n    style=\"z-index: 5;\">\n    <p\n      class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Network Issues, Please Connect.\n    </p>\n  </div> -->\n{:else if $chain.notSupported}\n  <div class=\"w-full flex items-center justify-center fixed top-0\" style=\"z-index: 5;\">\n    <p class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Wrong network, switch to\n      {chainName}\n      <button class=\"border-2 border-white p-2\" on:click={switchChain}>OK</button>\n    </p>\n  </div>\n{:else if $chain.genesisChanged}\n  <div class=\"w-full flex items-center justify-center fixed top-0\" style=\"z-index: 5;\">\n    <p class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-red-500 p-1\">\n      chain reset detected! Metamask need to have its account reset! <button\n        class=\"border-2 border-white p-2\"\n        on:click={acknowledgeNewGenesis}>OK</button\n      >\n    </p>\n  </div>\n{/if}\n\n{#if $wallet.error}\n  <Modal title=\"An Error Happened\" on:close={() => wallet.acknowledgeError()}>\n    <p class=\"w-64 text-center text-red-500 p-1\">\n      {$wallet.error.message}\n    </p>\n  </Modal>\n{:else if $chain.error}\n  <Modal title=\"An Error Happened\" on:close={() => chain.acknowledgeError()}>\n    <p class=\"w-64 text-center text-red-500 p-1\">\n      {$chain.error.message}\n    </p>\n  </Modal>\n{:else if $flow.inProgress}\n  <Modal {title} cancelable={!$wallet.connecting} on:close={() => flow.cancel()} closeButton={false}>\n    {#if $wallet.state === 'Idle'}\n      {#if $wallet.loadingModule}\n        Loading module:\n        {$wallet.selected}\n      {:else if $wallet.connecting}\n        Connecting to wallet...\n      {:else}\n        <div class=\"text-center\">\n          <p>You need to connect your wallet.</p>\n        </div>\n        <div class=\"flex flex-wrap justify-center pb-3\">\n          {#each options as option}\n            <img\n              class=\"cursor-pointer p-2 m-2 border-2 h-12 w-12 object-contain\"\n              alt={`Login with ${option.name}`}\n              src={`${base}/${option.img}`}\n              on:click={() => wallet.connect(option.id)}\n            />\n          {/each}\n        </div>\n        {#if builtinNeedInstalation}\n          <div class=\"text-center\">OR</div>\n          <div class=\"flex justify-center\">\n            <NavButton\n              label=\"Download Metamask\"\n              blank={true}\n              href=\"https://metamask.io/download.html\"\n              class=\"m-4 w-max-content\"\n            >\n              <img\n                class=\"cursor-pointer p-0 mx-2 h-10 w-10 object-contain\"\n                alt={`Download Metamask}`}\n                src={`${base}/images/metamask.svg`}\n              />\n              Download metamask\n            </NavButton>\n          </div>\n        {/if}\n      {/if}\n    {:else if $wallet.state === 'Locked'}\n      {#if $wallet.unlocking}\n        Please accept the application to access your wallet.\n      {:else}\n        <NavButton label=\"Unlock Wallet\" on:click={() => wallet.unlock()}>Unlock</NavButton>\n      {/if}\n    {:else if $chain.state === 'Idle'}\n      {#if $chain.connecting}\n        Connecting...\n      {:else if $chain.error}\n        <div class=\"text-center\">\n          <p>{$chain.error?.message || '' + $chain.error}</p>\n          <NavButton class=\"mt-4\" label=\"OK\" on:click={() => flow.cancel()}>OK</NavButton>\n        </div>\n      {/if}\n    {:else if $chain.state === 'Connected'}\n      {#if $chain.loadingData}\n        Loading contracts...\n      {:else if $chain.notSupported}\n        Please switch to\n        {chainName}\n        <!-- ({$chain.chainId}) -->\n        <NavButton label=\"Unlock Wallet\" on:click={switchChain}>Switch</NavButton>\n      {/if}\n    {:else if executionError}\n      <div class=\"text-center\">\n        <p>\n          {#if executionError.code === 4001}\n            You rejected the request\n          {:else if executionError.message}{executionError.message}{:else}Error: {executionError}{/if}\n        </p>\n        <NavButton class=\"mt-4\" label=\"Retry\" on:click={() => flow.retry()}>Retry</NavButton>\n      </div>\n    {:else if $wallet.pendingUserConfirmation}\n      {#if $wallet.pendingUserConfirmation[0] === 'transaction'}\n        Please accept transaction...\n      {:else if $wallet.pendingUserConfirmation[0] === 'signature'}\n        Please accept signature...\n      {:else}Please accept request...{/if}\n    {:else if $wallet.state === 'Ready'}\n      Please wait...\n    {:else}\n      <div class=\"text-center\">\n        <p>Flow aborted {$wallet.state}</p>\n        <NavButton class=\"mt-4\" label=\"Cancel\" on:click={() => flow.cancel()}>OK</NavButton>\n      </div>\n    {/if}\n  </Modal>\n{/if}\n","import { hexConcat } from '@ethersproject/bytes';\nimport { keccak256 } from '@ethersproject/solidity';\nimport { BigNumber } from '@ethersproject/bignumber';\nexport function combine(address, name) {\n    const n = BigNumber.from(hexConcat([keccak256(['address', 'string'], [address, name]), keccak256(['string', 'address'], [name, address])]));\n    return n;\n}\n//# sourceMappingURL=index.js.map","export const initialState: {\n  fetching: boolean;\n  stale: boolean;\n  error: unknown;\n  data?: Record<string, unknown>;\n  extensions?: Record<string, unknown>;\n} = {\n  fetching: false,\n  stale: false,\n  error: undefined,\n  data: undefined,\n  extensions: undefined,\n};\n","import {Client, defaultExchanges} from '@urql/core';\nimport type {OperationContext, OperationResult} from '@urql/core';\nimport {devtoolsExchange} from '@urql/devtools';\nimport type {DocumentNode} from 'graphql';\nimport {pipe, fromValue, concat, scan, map, subscribe} from 'wonka';\nimport {initialState} from './constants';\nimport type {sourceT} from 'wonka/dist/types/src/Wonka_types.gen';\n\nexport type InternalQueryState<T> = {\n  fetching: boolean;\n  stale: boolean;\n  data: T;\n  error: unknown;\n  extensions: Record<string, unknown>;\n};\n\nconst exchanges = defaultExchanges.concat();\n\nif (import.meta.env.MODE === 'development') {\n  exchanges.unshift(devtoolsExchange);\n}\n\nexport class EndPoint {\n  private client: Client;\n  constructor(url: string) {\n    if (!url) {\n      console.error(`need an url for graphql queries`);\n    } else {\n      this.client = new Client({\n        url,\n        exchanges,\n      });\n    }\n  }\n\n  mutate<Data = unknown, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n    }\n  ): Promise<OperationResult<Data>> {\n    return this.client.mutation(query, args?.variables, args?.context).toPromise();\n  }\n\n  query<Data, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n      // TODO path?: string\n    }\n  ): Promise<OperationResult<Data, Variables>> {\n    return this.client.query(query, args?.variables, args?.context).toPromise();\n  }\n\n  async queryList<T, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n      path?: string;\n      getLastId?: (entries: T[]) => string;\n    }\n  ): Promise<T[]> {\n    const fields = args.path.split('.');\n    const first = 100;\n    let lastId = '0x0';\n    let numEntries = first;\n    let entries: T[] = [];\n    while (numEntries === first) {\n      const result = await this.client.query(query, {first, lastId, ...args?.variables}, args?.context).toPromise();\n      if (result.error) {\n        throw new Error(result.error.message);\n      }\n      const data = result.data;\n\n      // TODO deep access on root array\n      let newEntries = [];\n      if (data && args.path) {\n        let tmp = data;\n        for (const fieldPart of fields) {\n          tmp = tmp[fieldPart];\n        }\n        newEntries = tmp;\n      }\n\n      numEntries = newEntries.length;\n      if (numEntries > 0) {\n        const newLastId = args?.getLastId !== undefined ? args?.getLastId(entries) : newEntries[numEntries - 1].id;\n        if (lastId === newLastId) {\n          console.log('same query, stop');\n          break;\n        }\n        lastId = newLastId;\n      }\n      entries = entries.concat(newEntries);\n    }\n    return entries;\n  }\n\n  subscribeToQuery<\n    Data extends Record<string, unknown>,\n    Variables extends Record<string, unknown> = Record<string, unknown>\n  >(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n    }\n  ): {\n    subscribe: (value: (value: InternalQueryState<Data>) => void) => () => void;\n  } {\n    const queryResult$ = pipe(\n      concat([\n        fromValue({fetching: true, stale: false}),\n        pipe(\n          this.client.query(query, args?.variables, args?.context),\n          map(({stale, data, error, extensions}) => ({\n            fetching: false,\n            stale: !!stale,\n            data,\n            error,\n            extensions,\n          }))\n        ),\n        fromValue({fetching: false, stale: false}),\n      ]),\n      scan(\n        (result, partial) => ({\n          ...result,\n          ...partial,\n        }),\n        initialState\n      )\n    );\n\n    return {\n      subscribe(onValue) {\n        return pipe(queryResult$ as sourceT<InternalQueryState<Data>>, subscribe(onValue)).unsubscribe;\n      },\n    };\n  }\n}\n","import {EndPoint} from '$lib/utils/graphql/endpoint';\nimport {graphNodeURL} from '$lib/config';\n\nexport const SUBGRAPH_ENDPOINT = new EndPoint(graphNodeURL);\n","import {writable} from 'svelte/store';\nimport type {Readable, Writable} from 'svelte/store';\n\ntype DataType<T> = Record<string, unknown> & {data?: T};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction _recurseSet(target: any, obj: any) {\n  for (const key of Object.keys(obj)) {\n    if (target[key] && typeof target[key] === 'object' && typeof obj[key] === 'object') {\n      _recurseSet(target[key], obj[key]);\n    } else {\n      target[key] = obj[key];\n    }\n  }\n}\n\nexport class BasicObjectStore<T extends Record<string, number | string>> implements Readable<T> {\n  protected store: Writable<T>;\n  protected __set: (newValue: T) => void;\n  private value: T;\n  private oldValue: T;\n  constructor(initialValue?: T) {\n    this.value = initialValue;\n    this.oldValue = {...initialValue};\n    this.store = writable(this.value, this._start.bind(this));\n  }\n\n  public get $store(): T {\n    return this.value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _start(_: (newValue: T) => void): void {\n    return this._stop.bind(this);\n  }\n\n  protected _stop(): void {}\n\n  protected _set(newValue: T): void {\n    let changes = false;\n    if (!this.value) {\n      this.value = {...newValue};\n      changes = true;\n    } else {\n      for (const key of Object.keys(this.oldValue)) {\n        if (newValue[key] !== this.oldValue[key]) {\n          changes = true;\n          (this.value as Record<string, unknown>)[key] = newValue[key];\n        }\n      }\n      for (const key of Object.keys(newValue)) {\n        if (newValue[key] !== this.oldValue[key]) {\n          changes = true;\n          (this.value as Record<string, unknown>)[key] = newValue[key];\n        }\n      }\n    }\n\n    if (changes) {\n      this.oldValue = {...this.value};\n      this.store.set(this.value);\n    }\n  }\n\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport class BaseStore<T extends Record<string, unknown>> implements Readable<T> {\n  protected store: Writable<T>;\n  constructor(protected readonly $store: T) {\n    this.store = writable(this.$store);\n  }\n\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    return this.store.subscribe(run, invalidate);\n  }\n\n  protected setPartial(obj: Partial<T>): T {\n    if (!this.$store) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = {};\n    }\n    for (const key of Object.keys(obj)) {\n      (this.$store as Record<string, unknown>)[key] = obj[key];\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n  protected set(obj: T): T {\n    if (!this.$store) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = {};\n    }\n\n    if (!obj) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = obj;\n    }\n    // Testing hmr for subclasses\n    //   const objAny: any = obj;\n    //   objAny.value += 7;\n    if (obj !== this.$store) {\n      for (const key of Object.keys(this.$store)) {\n        if (obj[key] === undefined) {\n          (this.$store as Record<string, unknown>)[key] = undefined;\n        }\n      }\n      for (const key of Object.keys(obj)) {\n        (this.$store as Record<string, unknown>)[key] = obj[key];\n      }\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n}\n\nexport class BaseStoreWithData<T extends DataType<U>, U> extends BaseStore<T> {\n  constructor($store: T) {\n    super($store);\n  }\n\n  protected setData(data: Partial<U>, extra?: Partial<T>): T {\n    this.$store.data = this.$store.data || ({} as U); // this assume setData was set before ?\n    _recurseSet(this.$store.data, data);\n    if (extra) {\n      this.setPartial(extra);\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n}\n\nexport abstract class AutoStartBaseStore<T extends Record<string, unknown>> extends BaseStore<T> {\n  private _listenerCount = 0;\n  private _stopUpdates?: () => void;\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    this._listenerCount++;\n    if (this._listenerCount === 1) {\n      console.info(`starting...`);\n      this._stopUpdates = this._onStart();\n    }\n    const unsubscribe = this.store.subscribe(run, invalidate);\n    return () => {\n      this._listenerCount--;\n      if (this._listenerCount === 0) {\n        console.info(`stopping`);\n        if (this._stopUpdates) {\n          this._stopUpdates();\n          this._stopUpdates = undefined;\n        }\n      }\n      unsubscribe();\n    };\n  }\n\n  abstract _onStart(): (() => void) | undefined;\n}\n","import type {EndPoint} from '../graphql/endpoint';\nimport type {Readable} from 'svelte/store';\nimport {BaseStoreWithData} from './base';\nimport {logs} from 'named-logs';\nconst console = logs('graphql');\n\ntype ChainTempoInfo = {lastBlockNumber?: number; stale: boolean};\n\nexport type Hook = {subscribe: (f: (chainInfo: ChainTempoInfo) => void) => () => void};\n\nexport type QueryState<T> = {\n  step: 'IDLE' | 'LOADING' | 'READY';\n  data?: T;\n  error?: string;\n};\n\nexport type ListOptions =\n  | {\n      path?: string;\n      getLastId?: (entries: unknown[]) => string;\n    }\n  | boolean;\n\nexport type QueryStore<T> = Readable<QueryState<T>> & {\n  acknowledgeError: () => void;\n};\n\nexport type QueryStoreWithFetch<T> = QueryStore<T> & {\n  fetch(extraVariables?: Record<string, unknown>): Promise<void>;\n};\n\nexport type QueryStoreWithRuntimeVariables<T> = QueryStoreWithFetch<T> & {\n  runtimeVariables: Record<string, string>;\n};\n\nclass BaseQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseStoreWithData<QueryState<T>, T>\n  implements QueryStoreWithRuntimeVariables<T>\n{\n  public runtimeVariables: Record<string, string> = {};\n  public constructor(\n    private endpoint: EndPoint,\n    private query: string,\n    private options?: {\n      variables?: V;\n      path?: string;\n      list?: ListOptions;\n    }\n  ) {\n    super({\n      step: 'IDLE',\n    });\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  async fetch(extraVariables?: Record<string, unknown>): Promise<void> {\n    console.info('fetching....');\n    const first =\n      typeof this.options?.variables?.first === 'number' ? (this.options?.variables?.first as number) : 1000;\n    let numEntries = first;\n    let lastId = '0x0';\n    let data: T;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let list: any[];\n    while (numEntries === first) {\n      try {\n        const variables = {first, lastId, ...this.options?.variables, ...this.runtimeVariables, ...extraVariables};\n        const querySplitted = this.query.split('?');\n        let query = '';\n        for (let i = 0; i < querySplitted.length; i++) {\n          const split = querySplitted[i];\n          if (split.startsWith('$')) {\n            if (!variables[split.substr(1)]) {\n              i++; // skip\n            }\n          } else {\n            query += split;\n          }\n        }\n        const result = await this.endpoint.query<Record<string, unknown>, V>(query, {\n          variables,\n          context: {\n            requestPolicy: 'cache-and-network', // required as cache-first will not try to get new data\n          },\n        });\n\n        if (!result.data) {\n          this.setPartial({error: `cannot fetch from thegraph node`});\n          throw new Error(`cannot fetch from thegraph node`);\n        }\n\n        const freshData = (this.options?.path ? result.data[this.options.path] : result.data) as T;\n        if (!data) {\n          data = freshData;\n        }\n\n        if (this.options?.list) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          let freshList = freshData as unknown as any[];\n          if (typeof this.options.list !== 'boolean' && this.options.list.path) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            freshList = freshData[this.options.list.path] as any[];\n          }\n\n          numEntries = freshList.length;\n          if (numEntries > 0) {\n            const newLastId =\n              typeof this.options.list !== 'boolean' && this.options.list.getLastId !== undefined\n                ? this.options.list.getLastId(freshList)\n                : freshList[numEntries - 1].id;\n            if (lastId === newLastId) {\n              console.log('same query, stop');\n              break;\n            }\n            lastId = newLastId;\n          }\n\n          if (!list) {\n            list = freshList;\n          } else {\n            list.push(...freshList);\n          }\n        } else {\n          numEntries = 0; // stop the loop\n        }\n      } catch (e) {\n        numEntries = 0;\n        console.error(e);\n      }\n    }\n    this.setPartial({data, step: 'READY'});\n  }\n}\n\nexport class TimedQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseQueryStore<T, V>\n  implements QueryStore<T>\n{\n  private timeout: NodeJS.Timeout;\n  private extraOptions: {frequency?: number};\n  public constructor(\n    endpoint: EndPoint,\n    query: string,\n    options?: {\n      variables?: V;\n      path?: string;\n      frequency?: number;\n    }\n  ) {\n    super(endpoint, query, options);\n    this.extraOptions = options;\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  async fetch(): Promise<void> {\n    await super.fetch();\n    this.timeout = setTimeout(this.fetch.bind(this), (this.extraOptions?.frequency || 1) * 1000);\n  }\n\n  start(): QueryStore<T> {\n    if (this.$store.step === 'IDLE') {\n      this.setPartial({step: 'LOADING'});\n    }\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.fetch();\n    return this;\n  }\n\n  stop(): void {\n    this.setPartial({step: 'IDLE'});\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = undefined;\n    }\n  }\n}\n\nexport class HookedQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseQueryStore<T, V>\n  implements QueryStore<T>\n{\n  private hook: Hook;\n  public constructor(\n    endpoint: EndPoint,\n    query: string,\n    hook: Hook,\n    options?: {\n      variables?: V;\n      path?: string;\n      list?: ListOptions;\n    }\n  ) {\n    super(endpoint, query, options);\n    this.hook = hook;\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  private listenerCount = 0;\n  private stopUpdates?: () => void;\n  subscribe(run: (value: QueryState<T>) => void, invalidate?: (value?: QueryState<T>) => void): () => void {\n    this.listenerCount++;\n    if (this.listenerCount === 1) {\n      console.info(`start fetching`);\n      this.stopUpdates = this.hook.subscribe((chainInfo: ChainTempoInfo) =>\n        this.fetch({blockNumber: chainInfo.lastBlockNumber})\n      );\n    }\n    const unsubscribe = this.store.subscribe(run, invalidate);\n    return () => {\n      this.listenerCount--;\n      if (this.listenerCount === 0) {\n        console.info(`stop fetching`);\n        if (this.stopUpdates) {\n          this.stopUpdates();\n          this.stopUpdates = undefined;\n        }\n      }\n      unsubscribe();\n    };\n  }\n}\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\nimport type { Player } from './player';\n\nexport type Players = Player[];\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass UserStore implements QueryStore<Players> {\n  private queryStore: QueryStore<Players>;\n  private store: Readable<QueryState<Players>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      players {\n        id\n        x\n        y\n        xDestination\n        yDestination\n        arrivalTime\n      }\n    }`,\n      chainTempo,\n      { path: 'players' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Players>, TransactionRecord[]]): QueryState<Players> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Players>>,\n    invalidate?: Invalidator<QueryState<Players>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const players = new UserStore(SUBGRAPH_ENDPOINT, transactions);\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\n\nexport type Village = {\n  id: string;\n  x: number;\n  y: number;\n  name: string;\n  description: string;\n  member: string;\n}\n\nexport type Villages = Village[]\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass UserStore implements QueryStore<Villages> {\n  private queryStore: QueryStore<Villages>;\n  private store: Readable<QueryState<Villages>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      villages{\n        id\n        x\n        y\n        name\n        description\n        member\n      }\n    }`,\n      chainTempo,\n      { path: 'villages' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Villages>, TransactionRecord[]]): QueryState<Villages> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Villages>>,\n    invalidate?: Invalidator<QueryState<Villages>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const villages = new UserStore(SUBGRAPH_ENDPOINT, transactions);\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\n\nexport type Items = {\n  id: string;\n  name: string;\n  description: string;\n  buyPrice: number;\n  sellPrice: number;\n}[]\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass UserStore implements QueryStore<Items> {\n  private queryStore: QueryStore<Items>;\n  private store: Readable<QueryState<Items>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      itemTypes {\n        id\n        name\n        description\n        buyPrice\n        sellPrice\n      }\n    }`,\n      chainTempo,\n      { path: 'itemTypes' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Items>, TransactionRecord[]]): QueryState<Items> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Items>>,\n    invalidate?: Invalidator<QueryState<Items>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const items = new UserStore(SUBGRAPH_ENDPOINT, transactions);\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\nimport type { Player } from '$lib/player/player';\n\nexport type Trust = {\n  id: string;\n  staker: Player;\n  borrower: Player;\n  trustAmount: number;\n}[]\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass TrustsStore implements QueryStore<Trust> {\n  private queryStore: QueryStore<Trust>;\n  private store: Readable<QueryState<Trust>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore, staker: string) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query getTrust($staker: String){\n      trusts(where: {staker: $staker}) {\n        id\n        staker {\n          id\n        }\n        borrower{\n          id\n        }\n        trustAmount\n      }\n    }`,\n      chainTempo,\n      { path: 'trusts', variables: { staker: staker.toLowerCase() } }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Trust>, TransactionRecord[]]): QueryState<Trust> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Trust>>,\n    invalidate?: Invalidator<QueryState<Trust>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const getTrusts = (staker: string) => new TrustsStore(SUBGRAPH_ENDPOINT, transactions, staker);\n","<svg class=\"dai\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n    fill=\"url(#paint0_linear)\"\n  />\n  <path\n    d=\"M12.744 6.67999H11.7947C11.272 5.22932 9.86668 4.23466 8.01334 4.23466H4.96534V6.67999H3.90668V7.55732H4.96534V8.47732H3.90668V9.35466H4.96534V11.7707H8.01334C9.84534 11.7707 11.24 10.784 11.776 9.35466H12.744V8.47732H11.9893C12.008 8.32266 12.0187 8.16266 12.0187 8.00266V7.98132C12.0187 7.83732 12.0107 7.69599 11.9973 7.55732H12.7467V6.67999H12.744ZM5.81868 5.01599H8.01334C9.37334 5.01599 10.384 5.68532 10.8507 6.67732H5.81868V5.01599ZM8.01334 10.9813H5.81868V9.35199H10.8453C10.376 10.328 9.36801 10.9813 8.01334 10.9813ZM11.136 8.02132C11.136 8.17599 11.1253 8.32799 11.104 8.47466H5.81868V7.55466H11.1067C11.1253 7.69866 11.136 7.84799 11.136 7.99999V8.02132Z\"\n    fill=\"white\"\n  />\n  <defs>\n    <linearGradient id=\"paint0_linear\" x1=\"8\" y1=\"-2.26667\" x2=\"8\" y2=\"17.68\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#F9A606\" />\n      <stop offset=\"1\" stop-color=\"#FBCC5F\" />\n    </linearGradient>\n  </defs>\n</svg>\n","<script lang=\"ts\">\n  import {flow} from '$lib/blockchain/wallet';\n  import type {Player} from '$lib/player/player';\n  import type {Players} from '$lib/player/players';\n  import type {Village} from '$lib/village/villages';\n  import type {Items} from '$lib/item/items';\n  import {getTrusts} from '$lib/trust/trust';\n  import Modal from '$lib/components/styled/Modal.svelte';\n  import {onMount} from 'svelte';\n  import DaiSymbol from './DaiSymbol.svelte';\n  import Blockie from '$lib/components/generic/CanvasBlockie.svelte';\n\n  export let x: number;\n  export let y: number;\n  export let village: Village | null;\n  export let players: Players;\n  export let items: Items;\n  export let currentPlayer: Player | null;\n\n  const DISTANCE_MULTIPLIER = 2;\n\n  let showModal = false;\n  let trusts = getTrusts(village ? village.member : '');\n\n  function distance(x0, y0, x1, y1) {\n    return Math.abs(x1 - x0) + Math.abs(y1 - y0);\n  }\n\n  async function fight() {\n    await flow.execute((contracts) => contracts.UnionQuestCore.fight());\n  }\n\n  async function beginMove(x, y) {\n    await flow.execute((contracts) => contracts.UnionQuestCore.beginMove(x, y));\n  }\n\n  async function buyItem(id: string) {\n    await flow.execute((contracts) => contracts.UnionQuestCore.buyItem(id, 1, '0x'));\n  }\n</script>\n\n<div>\n  {#if showModal}\n    <Modal\n      title={`${village ? `${village.name} (${x},${y})` : `Field (${x},${y})`}`}\n      on:close={() => (showModal = false)}\n      closeButton={true}\n    >\n      <div class=\"flex flex-col\">\n        <div class=\"m-2 rounded-md border-4 p-4\">\n          <div class=\"text-xl\">Overview</div>\n          {#if village}\n            <div>\n              {village.description}\n            </div>\n          {:else}\n            <div>An empty field!</div>\n          {/if}\n        </div>\n        <div class=\"m-2 rounded-md border-4 p-4 \">\n          <div class=\"text-xl\">Players</div>\n          <div class=\"italic\">\n            There are {players.filter((p) => p.x === x && p.y === y).length} player(s) in this tile.\n          </div>\n          <ul class=\"list-disc\">\n            {#each players.filter((p) => p.x === x && p.y === y) as player}\n              <li>\n                <div class=\"flex\">\n                  <Blockie address={player.id} class=\"m-1 h-6 w-6\" />\n                  <a href={`https://kovan.union.finance/profile/${player.id}`}>\n                    {player.id.slice(0, 4)}...{player.id.slice(-4)}\n                  </a>\n                </div>\n              </li>\n            {/each}\n          </ul>\n        </div>\n        {#if village}\n          <div class=\"m-2 rounded-md border-4 p-4 \">\n            <div class=\"text-xl\">Reputation Leaderboard</div>\n            <ul class=\"list-disc\">\n              {#each $trusts.data as trust}\n                <li>\n                  <div class=\"flex\">\n                    <Blockie address={trust.borrower.id} class=\"m-1 h-6 w-6\" />\n                    <a rel=\"noopener\" target=\"_blank\" href={`https://kovan.union.finance/profile/${trust.borrower.id}`}>\n                      {trust.borrower.id.slice(0, 4)}...{trust.borrower.id.slice(-4)}\n                    </a>\n                    <div class=\"flex\">: {trust.trustAmount}<DaiSymbol /></div>\n                  </div>\n                </li>\n              {/each}\n              <a rel=\"noopener\" target=\"_blank\" href={`https://kovan.union.finance/profile/${village.member}`}>\n                View this village on Union\n              </a>\n            </ul>\n          </div>\n        {/if}\n        <div class=\"m-2 rounded-md border-4 p-4\">\n          <div class=\"text-xl\">Actions</div>\n          <div class=\"rounded-md border-2 p-4\">\n            <div class=\"text-lg\">Movement</div>\n            {#if currentPlayer && !currentPlayer.arrivalTime}\n              <div>\n                Distance:\n                <span class=\"italic\">\n                  |{x} - {currentPlayer.x}| + |{y} - {currentPlayer.y}|\n                </span>\n                =\n                <span class=\"font-medium\">\n                  {distance(x, y, currentPlayer.x, currentPlayer.y)} unit(s).\n                </span>\n              </div>\n              <div>\n                Your speed:\n                <span class=\"font-medium\">\n                  {DISTANCE_MULTIPLIER} units/second.\n                </span>\n              </div>\n              <div>\n                Travel time:\n                <span class=\"italic\">\n                  {distance(x, y, currentPlayer.x, currentPlayer.y)} * {DISTANCE_MULTIPLIER}\n                </span>\n                =\n                <span class=\"font-bold\">\n                  {DISTANCE_MULTIPLIER * distance(x, y, currentPlayer.x, currentPlayer.y)}\n                  seconds\n                </span>\n                <button\n                  on:click={() => beginMove(x, y)}\n                  class=\"flex-shrink-0 bg-yellow-500 hover:bg-yellow-600 border-yellow-500 hover:border-yellow-600 text-sm border-4\n      text-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed\"\n                  type=\"button\"\n                >\n                  MOVE HERE\n                </button>\n\n                <button\n                  on:click={fight}\n                  disabled={currentPlayer.x !== x || currentPlayer.y !== y}\n                  class=\"flex-shrink-0 bg-yellow-500 hover:bg-yellow-600 border-yellow-500 hover:border-yellow-600 text-sm border-4\n      text-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed\"\n                  type=\"button\"\n                >\n                  FIGHT\n                </button>\n              </div>\n            {:else if currentPlayer.arrivalTime && currentPlayer.xDestination === x && currentPlayer.yDestination === y}\n              <div>\n                <div>You are travelling here!</div>\n              </div>\n            {:else}\n              <div>You are already travelling to another tile.</div>\n            {/if}\n          </div>\n          {#if village}\n            <div class=\"rounded-md border-2 p-4\">\n              <div class=\"text-lg\">Shop</div>\n              <div class=\"flex\">\n                {#each items as item}\n                  <div class=\"border-2 border-dashed w-48\">\n                    <div>\n                      {item.name}\n                    </div>\n                    <div class=\"italic\">\n                      {item.description}\n                    </div>\n                    <div class=\"flex\">\n                      Price: {item.buyPrice / 10 ** 18}\n                      <DaiSymbol />\n                    </div>\n                    <button\n                      class=\"flex-shrink-0 bg-yellow-500 hover:bg-yellow-600 border-yellow-500 hover:border-yellow-600 text-sm border-4\ntext-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed\"\n                      type=\"button\"\n                      disabled={currentPlayer.x !== x || currentPlayer.y !== y}\n                      on:click={() => buyItem(item.id)}\n                    >\n                      BUY 1\n                    </button>\n                  </div>\n                {/each}\n              </div>\n            </div>\n          {/if}\n        </div>\n      </div>\n    </Modal>\n  {/if}\n  <div\n    class=\"border-4 hover:border-green-500 {currentPlayer &&\n    players.some((p) => p.x === x && p.y === y && p.id === currentPlayer.id)\n      ? 'border-yellow-500 hover:border-yellow-500'\n      : 'border-black-500'}\"\n  >\n    <div class=\"absolute grid grid-cols-3\">\n      {#each players.slice(0, 9) as player}\n        {#if !player.arrivalTime && player.x === x && player.y === y}\n          <Blockie address={player.id} class=\"m-1 h-6 w-6\" />\n        {/if}\n      {/each}\n    </div>\n    <svg width=\"100\" height=\"100\" on:click={() => (showModal = true)}>\n      <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\">\n        <rect fill=\"#009A17\" width=\"1\" height=\"1\" />\n        <path d=\"M 0.161,0.178 0.249,0.336\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n        <path d=\"M 0.314,0.173 V 0.33\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n        <path d=\"M 0.469,0.178 0.376,0.336\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n        <path d=\"m 0.48277796,0.53428125 0.088,0.158\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n        <path d=\"m 0.63577796,0.52928125 v 0.157\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n        <path d=\"m 0.79077796,0.53428125 -0.093,0.158\" fill=\"none\" stroke=\"#004400\" stroke-width=\"0.02\" />\n      </svg>\n      {#if village}\n        {#if village.x > 2}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 1 1\">\n            <polygon fill=\"gold\" points=\"0.25,0.35 0.5,0.1 0.75,0.35\" />\n            <rect fill=\"darkkhaki\" x=\"0.25\" y=\"0.35\" width=\"0.5\" height=\"0.5\" />\n            <rect fill=\"brown\" x=\"0.45\" y=\"0.65\" width=\"0.1\" height=\"0.2\" />\n          </svg>\n        {:else}\n          <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 2 3\">\n            <rect fill=\"burlywood\" x=\"0.25\" y=\"0.3\" width=\"1.5\" height=\"2.5\" />\n            <rect fill=\"sienna\" x=\"0.7\" y=\"2.1\" width=\"0.6\" height=\"0.7\" />\n            <g transform=\"translate(1 0.7)\">\n              <path stroke=\"brown\" d=\"M0 0.8 V -0.8\" fill=\"transparent\" stroke-width=\"0.4\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  attributeType=\"XML\"\n                  type=\"rotate\"\n                  from=\"0 0 0\"\n                  to=\"360 0 0\"\n                  dur=\"4s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n              <path stroke=\"brown\" d=\"M0.8 0 H -0.8\" fill=\"transparent\" stroke-width=\"0.4\">\n                <animateTransform\n                  attributeName=\"transform\"\n                  attributeType=\"XML\"\n                  type=\"rotate\"\n                  from=\"0 0 0\"\n                  to=\"360 0 0\"\n                  dur=\"4s\"\n                  repeatCount=\"indefinite\"\n                />\n              </path>\n            </g>\n          </svg>\n        {/if}\n      {/if}\n    </svg>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {flow} from '$lib/blockchain/wallet';\n\n  import type {Player} from '$lib/player/player';\n  import {onMount} from 'svelte';\n  export let currentPlayer: Player | null;\n\n  const DISTANCE_MULTIPLIER = 2;\n\n  function manhattanDistance(x0, y0, x1, y1) {\n    return Math.abs(x1 - x0) + Math.abs(y1 - y0);\n  }\n\n  async function resolveMove() {\n    await flow.execute((contracts) => contracts.UnionQuestCore.resolveMove());\n  }\n\n  const distanceBetween = manhattanDistance(\n    currentPlayer.xDestination,\n    currentPlayer.yDestination,\n    currentPlayer.x,\n    currentPlayer.y\n  );\n\n  let currentTimestamp = Date.now();\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      currentTimestamp = Date.now();\n    }, 1000);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<div>\n  {#if !currentPlayer.arrivalTime}\n    <div>\n      You are currently at tile ({currentPlayer.x}, {currentPlayer.y}).\n    </div>\n  {:else}\n    <div>\n      <div>Current journey.</div>\n      <div class=\"flex\">\n        ({currentPlayer.x}, {currentPlayer.y})\n        <div class=\"w-48 bg-gray-200 rounded-full\">\n          <div\n            class=\"bg-blue-600 text-xs font-medium text-blue-100 text-center p-0.5 leading-none rounded-l-full\"\n            style=\"width: {currentPlayer.arrivalTime > currentTimestamp / 1000\n              ? (100 *\n                  (distanceBetween - (currentPlayer.arrivalTime - currentTimestamp / 1000) / DISTANCE_MULTIPLIER)) /\n                distanceBetween\n              : 100}%\"\n          >\n            {currentPlayer.arrivalTime > currentTimestamp / 1000\n              ? Math.round(\n                  (100 *\n                    (distanceBetween - (currentPlayer.arrivalTime - currentTimestamp / 1000) / DISTANCE_MULTIPLIER)) /\n                    distanceBetween\n                )\n              : 100}%\n          </div>\n        </div>\n        ({currentPlayer.xDestination}, {currentPlayer.yDestination})\n      </div>\n      <button\n        class=\"flex-shrink-0 bg-green-500 hover:bg-green-600 border-green-500 hover:border-green-600 text-sm border-4\ntext-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed\"\n        type=\"button\"\n        disabled={currentPlayer.arrivalTime > currentTimestamp / 1000}\n        on:click={resolveMove}\n      >\n        RESOLVE JOURNEY {currentPlayer.arrivalTime > currentTimestamp / 1000\n          ? `(${Math.round(currentPlayer.arrivalTime - currentTimestamp / 1000)}s)`\n          : ''}\n      </button>\n    </div>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import WalletAccess from '$lib/blockchain/WalletAccess.svelte';\n  import {wallet, flow} from '$lib/blockchain/wallet';\n  import {onMount} from 'svelte';\n  import {combine} from 'union-quest-common';\n  import {players} from '$lib/player/players';\n  import {villages} from '$lib/village/villages';\n  import {items} from '$lib/item/items';\n  import Tile from '$lib/components/Tile.svelte';\n  import DaiSymbol from '$lib/components/DaiSymbol.svelte';\n  import JourneyInfo from '$lib/components/JourneyInfo.svelte';\n\n  async function start() {\n    await flow.execute((contracts) => contracts.UnionQuestCore.start());\n  }\n\n  onMount(() => {\n    console.log('mount demo', {\n      combine: combine(wallet.address || '0x0000000000000000000000000000000000000000', 'hi').toString(),\n    });\n  });\n</script>\n\n<symbol id=\"icon-spinner6\" viewBox=\"0 0 32 32\">\n  <path\n    d=\"M12 4c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM24.719 16c0 0 0 0 0 0 0-1.812 1.469-3.281 3.281-3.281s3.281 1.469 3.281 3.281c0 0 0 0 0 0 0 1.812-1.469 3.281-3.281 3.281s-3.281-1.469-3.281-3.281zM21.513 24.485c0-1.641 1.331-2.972 2.972-2.972s2.972 1.331 2.972 2.972c0 1.641-1.331 2.972-2.972 2.972s-2.972-1.331-2.972-2.972zM13.308 28c0-1.487 1.205-2.692 2.692-2.692s2.692 1.205 2.692 2.692c0 1.487-1.205 2.692-2.692 2.692s-2.692-1.205-2.692-2.692zM5.077 24.485c0-1.346 1.092-2.438 2.438-2.438s2.438 1.092 2.438 2.438c0 1.346-1.092 2.438-2.438 2.438s-2.438-1.092-2.438-2.438zM1.792 16c0-1.22 0.989-2.208 2.208-2.208s2.208 0.989 2.208 2.208c0 1.22-0.989 2.208-2.208 2.208s-2.208-0.989-2.208-2.208zM5.515 7.515c0 0 0 0 0 0 0-1.105 0.895-2 2-2s2 0.895 2 2c0 0 0 0 0 0 0 1.105-0.895 2-2 2s-2-0.895-2-2zM28.108 7.515c0 2.001-1.622 3.623-3.623 3.623s-3.623-1.622-3.623-3.623c0-2.001 1.622-3.623 3.623-3.623s3.623 1.622 3.623 3.623z\"\n  />\n</symbol>\n<WalletAccess>\n  <section class=\"py-8 px-4\">\n    {#if !$villages.step}\n      <div>Messages not loaded</div>\n    {:else if $villages.error}\n      <div>Error: {$villages.error}</div>\n    {:else if $villages.step === 'LOADING'}\n      <div>Loading Map...</div>\n    {:else if !$villages.data || !$players.data || !$items.data}\n      <div>Null!</div>\n    {:else if !$players.data.find((p) => ($wallet.address ? p.id === $wallet.address.toLowerCase() : false))}\n      <button on:click={() => start()}>START</button>\n    {:else}\n      <div class=\"flex flex-col justify-center\">\n        {#if $wallet.address}\n          <JourneyInfo\n            currentPlayer={$players.data.find((p) =>\n              $wallet.address ? p.id === $wallet.address.toLowerCase() : false\n            )}\n          />\n        {/if}\n        <div class=\"flex justify-center\">\n          <div class=\"grid grid-cols-6 w-fit h-fit\">\n            {#each [0, 1, 2, 3, 4, 5] as x}\n              {#each [0, 1, 2, 3, 4, 5] as y}\n                <Tile\n                  {x}\n                  {y}\n                  village={$villages.data.find((v) => v.x === x && v.y === y)}\n                  players={$players.data}\n                  items={$items.data}\n                  currentPlayer={$players.data.find((p) =>\n                    $wallet.address ? p.id === $wallet.address.toLowerCase() : false\n                  )}\n                />\n              {/each}\n            {/each}\n          </div>\n        </div>\n      </div>\n    {/if}\n  </section>\n</WalletAccess>\n\n<style>\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: gray;\n    opacity: 0.5;\n  }\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: gray;\n    opacity: 0.5;\n  }\n  :-ms-input-placeholder {\n    /* IE 10+ */\n    color: gray;\n    opacity: 0.5;\n  }\n  :-moz-placeholder {\n    /* Firefox 18- */\n    color: gray;\n    opacity: 0.5;\n  }\n  @media (prefers-color-scheme: dark) {\n    ::-webkit-input-placeholder {\n      /* Chrome/Opera/Safari */\n      color: pink;\n      opacity: 0.5;\n    }\n    ::-moz-placeholder {\n      /* Firefox 19+ */\n      color: pink;\n      opacity: 0.5;\n    }\n    :-ms-input-placeholder {\n      /* IE 10+ */\n      color: pink;\n      opacity: 0.5;\n    }\n    :-moz-placeholder {\n      /* Firefox 18- */\n      color: pink;\n      opacity: 0.5;\n    }\n  }\n</style>\n"],"names":["defaultExchanges","Client","concat","fromValue","map","scan","subscribe","console","UserStore","DISTANCE_MULTIPLIER"],"mappings":"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"}