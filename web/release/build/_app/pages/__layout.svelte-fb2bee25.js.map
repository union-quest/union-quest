{"version":3,"file":"__layout.svelte-fb2bee25.js","sources":["../../../../../src/lib/web/serviceWorker.ts","../../../../../src/service-worker-handler.ts","../../../../../src/lib/components/styled/navigation/NavLink.svelte","../../../../../src/lib/components/styled/Loading.svelte","../../../../build/runtime/app/stores.js","../../../../../src/lib/components/styled/navigation/NavBar.svelte","../../../../../src/lib/components/styled/notification/Notification.svelte","../../../../../src/lib/components/styled/notification/Notifications.svelte","../../../../../src/lib/components/generic/NoInstallPrompt.svelte","../../../../../src/lib/components/styled/NewVersionNotification.svelte","../../../../../src/lib/web/darkMode.ts","../../../../../src/lib/components/styled/DarkSwitch.svelte","../../../../../src/routes/__layout.svelte"],"sourcesContent":["import {get, writable} from 'svelte/store';\n\nexport type ServiceWorkerState = {\n  registration?: ServiceWorkerRegistration;\n  updateAvailable: boolean;\n};\n\nconst store = writable<ServiceWorkerState>({registration: undefined, updateAvailable: false});\nexport const serviceWorker = {\n  ...store,\n  get registration(): ServiceWorkerRegistration | undefined {\n    return get(store).registration;\n  },\n  get updateAvailable(): boolean {\n    return get(store).updateAvailable;\n  },\n};\n\n// TODO remove\nif (typeof window !== 'undefined') {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  (window as any).serviceWorker = serviceWorker;\n}\n","import type {Logger} from 'named-logs';\nimport {logs} from 'named-logs';\nimport {serviceWorker} from '$lib/web/serviceWorker';\nimport {base} from '$app/paths';\n\nconst console = logs('service-worker') as Logger & {level: number; enabled: boolean};\nfunction updateLoggingForWorker(worker: ServiceWorker | null) {\n  if (worker) {\n    if (console.enabled) {\n      console.debug(`enabling logging for service worker, level: ${console.level}`);\n    } else {\n      console.debug(`disabling logging for service worker, level: ${console.level}`);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    worker.postMessage({type: 'debug', level: console.level, enabled: console.enabled});\n  }\n}\n\nconst IDLE_DELAY_MS = 3 * 60 * 1000;\nconst CHECK_DELAY_MS = 30 * 60 * 1000;\n\nfunction handleAutomaticUpdate(registration: ServiceWorkerRegistration) {\n  let lastFocusTime = performance.now();\n  function wakeup() {\n    const timePassed = performance.now();\n    // console.log('wakeup ', lastFocusTime / 60 / 1000, 'vs', timePassed / 60 / 1000);\n    if (timePassed - lastFocusTime > IDLE_DELAY_MS) {\n      registration.update();\n    }\n    lastFocusTime = timePassed;\n  }\n  ['focus', 'pointerdown'].forEach((evt) => window.addEventListener(evt, wakeup));\n\n  setInterval(() => registration.update(), CHECK_DELAY_MS);\n}\n\n// taken from: https://stackoverflow.com/a/50535316\nfunction listenForWaitingServiceWorker(\n  registration: ServiceWorkerRegistration,\n  callback: (reg: ServiceWorkerRegistration) => void\n) {\n  function awaitStateChange() {\n    registration.installing.addEventListener('statechange', function () {\n      if (this.state === 'installed') callback(registration);\n    });\n  }\n  if (!registration) {\n    return;\n  }\n  if (registration.waiting) {\n    return callback(registration);\n  }\n  if (registration.installing) {\n    awaitStateChange();\n  } else {\n    registration.addEventListener('updatefound', awaitStateChange);\n  }\n}\n\nif (typeof navigator !== 'undefined' && 'serviceWorker' in navigator) {\n  // ------------------------------------------------------------------------------------------------\n  // FORCE RELOAD ON CONTROLLER CHANGE\n  // ------------------------------------------------------------------------------------------------\n  let refreshing = false;\n  navigator.serviceWorker.addEventListener('controllerchange', () => {\n    if (refreshing) {\n      return;\n    }\n    refreshing = true;\n    window.location.reload();\n  });\n  // ------------------------------------------------------------------------------------------------\n\n  window.addEventListener('load', function () {\n    const swLocation = `${base}/service-worker.js`;\n    //{scope: base}\n    navigator.serviceWorker\n      .register(swLocation)\n      .then((registration) => {\n        try {\n          handleAutomaticUpdate(registration);\n        } catch (e) {}\n        serviceWorker.set({registration, updateAvailable: false}); // TODO keep updateAvailable if any ?\n        updateLoggingForWorker(registration.installing);\n        updateLoggingForWorker(registration.waiting);\n        updateLoggingForWorker(registration.active);\n        listenForWaitingServiceWorker(registration, () => {\n          console.log('[Service Worker] Update found');\n          serviceWorker.set({registration, updateAvailable: true});\n        });\n      })\n      .catch((e) => {\n        console.log(e);\n        // console.error('Failed to register service worker', e);\n      });\n  });\n}\n","<script lang=\"ts\">\n  export let active = false;\n  export let href: string;\n</script>\n\n{#if active}\n  <li class=\"-mb-px mr-1\">\n    <span\n      class=\"bg-white dark:bg-black inline-block border-l border-t border-r rounded-t py-2 px-4 border-yellow-600 text-yellow-600 font-semibold\"\n      {href}\n    >\n      <slot />\n    </span>\n  </li>\n{:else}\n  <li class=\"-mb-px mr-1\">\n    <a class=\"bg-white dark:bg-black inline-block py-2 px-4 border-yellow-800 text-yellow-800 font-semibold\" {href}>\n      <slot />\n    </a>\n  </li>\n{/if}\n","<script lang=\"ts\">\n  export let cancel: () => void = () => {};\n  cancel;\n</script>\n\n<div class=\"page-loading\" />\n\n<style>\n  @keyframes scale {\n    from {\n      width: 0;\n    }\n    to {\n      width: 100%;\n    }\n  }\n  @keyframes flicker {\n    from {\n      background-color: #aaaaaa;\n    }\n    to {\n      background-color: #d61f69;\n    }\n  }\n  .page-loading::before {\n    content: ' ';\n    display: block;\n    position: fixed;\n    z-index: 10;\n    height: 2px;\n    width: 100%;\n    top: 0;\n    left: 0;\n    background-color: #06d;\n    animation: flicker infinite ease-out 2s, scale 2s;\n    box-shadow: 0 2px 2px rgba(0, 0, 0, 0.2);\n  }\n</style>\n","import { getContext } from 'svelte';\nimport { browser } from './env.js';\nimport '../env.js';\n\nconst ssr = !browser;\n\n// TODO remove this (for 1.0? after 1.0?)\nlet warned = false;\nfunction stores() {\n\tif (!warned) {\n\t\tconsole.error('stores() is deprecated; use getStores() instead');\n\t\twarned = true;\n\t}\n\treturn getStores();\n}\n\n/**\n * @type {import('$app/stores').getStores}\n */\nconst getStores = () => {\n\tconst stores = getContext('__svelte__');\n\n\treturn {\n\t\tpage: {\n\t\t\tsubscribe: stores.page.subscribe\n\t\t},\n\t\tnavigating: {\n\t\t\tsubscribe: stores.navigating.subscribe\n\t\t},\n\t\t// TODO remove this (for 1.0? after 1.0?)\n\t\t// @ts-expect-error - deprecated, not part of type definitions, but still callable\n\t\tget preloading() {\n\t\t\tconsole.error('stores.preloading is deprecated; use stores.navigating instead');\n\t\t\treturn {\n\t\t\t\tsubscribe: stores.navigating.subscribe\n\t\t\t};\n\t\t},\n\t\tsession: stores.session\n\t};\n};\n\n/** @type {typeof import('$app/stores').page} */\nconst page = {\n\t/** @param {(value: any) => void} fn */\n\tsubscribe(fn) {\n\t\tconst store = getStores().page;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @type {typeof import('$app/stores').navigating} */\nconst navigating = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().navigating;\n\t\treturn store.subscribe(fn);\n\t}\n};\n\n/** @param {string} verb */\nconst throw_error = (verb) => {\n\tthrow new Error(\n\t\tssr\n\t\t\t? `Can only ${verb} session store in browser`\n\t\t\t: `Cannot ${verb} session store before subscribing`\n\t);\n};\n\n/** @type {typeof import('$app/stores').session} */\nconst session = {\n\tsubscribe(fn) {\n\t\tconst store = getStores().session;\n\n\t\tif (!ssr) {\n\t\t\tsession.set = store.set;\n\t\t\tsession.update = store.update;\n\t\t}\n\n\t\treturn store.subscribe(fn);\n\t},\n\tset: () => throw_error('set'),\n\tupdate: () => throw_error('update')\n};\n\nexport { getStores, navigating, page, session, stores };\n","<script lang=\"ts\">\n  type LinkInfo = {href: string; title: string};\n  export let links: LinkInfo[];\n  import NavLink from './NavLink.svelte';\n  import Loading from '../Loading.svelte';\n  import {urlOfPath} from '$lib/utils/url';\n  import {page, navigating} from '$app/stores';\n</script>\n\n<!-- {JSON.stringify($page, null, '  ')} -->\n\n<!-- {JSON.stringify($navigating, null, '  ')} -->\n\n<ul class=\"flex m-1 border-b border-yellow-600\">\n  {#each links as link}\n    <NavLink href={link.href} active={urlOfPath(link.href, $page.url.pathname)}>\n      {link.title}\n      <!-- ({link.href}) -->\n    </NavLink>\n  {/each}\n</ul>\n\n{#if $navigating}\n  <Loading />\n{/if}\n","<script lang=\"ts\">\n  import {createEventDispatcher} from 'svelte';\n  export let title: string;\n  export let text: string;\n  export let type: 'error' | 'success' | 'info' | 'warning' = 'info';\n\n  const dispatch = createEventDispatcher();\n  const close = () => dispatch('close');\n</script>\n\n<div class=\"max-w-sm w-full dark:bg-black bg-white shadow-lg rounded-lg pointer-events-auto\">\n  <div class=\"rounded-lg shadow-xs overflow-hidden dark:border-pink-500 dark:border-2\">\n    <div class=\"p-4\">\n      <div class=\"flex items-start\">\n        <div class=\"flex-shrink-0\">\n          {#if type !== 'error'}\n            <!-- Heroicon name: check-circle -->\n            <svg\n              class=\"h-6 w-6 text-green-400\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              fill=\"none\"\n              viewBox=\"0 0 24 24\"\n              stroke=\"currentColor\"\n            >\n              <path\n                stroke-linecap=\"round\"\n                stroke-linejoin=\"round\"\n                stroke-width=\"2\"\n                d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"\n              />\n            </svg>\n          {:else}\n            <!-- Heroicon name: x-circle -->\n            <svg\n              class=\"h-5 w-5 text-red-400\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              viewBox=\"0 0 20 20\"\n              fill=\"currentColor\"\n            >\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          {/if}\n        </div>\n        <div class=\"ml-3 w-0 flex-1 pt-0.5\">\n          <p class=\"text-sm leading-5 font-medium text-gray-900 dark:text-gray-300\">\n            {title}\n          </p>\n          <p class=\"mt-1 text-sm leading-5 text-gray-500\">{text}</p>\n        </div>\n        <div class=\"ml-4 flex-shrink-0 flex\">\n          <button\n            on:click={close}\n            class=\"inline-flex text-gray-400 focus:outline-none focus:text-gray-500 transition ease-in-out duration-150\"\n          >\n            <!-- Heroicon name: x -->\n            <svg class=\"h-5 w-5\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path\n                fill-rule=\"evenodd\"\n                d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                clip-rule=\"evenodd\"\n              />\n            </svg>\n          </button>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  import Notification from './Notification.svelte';\n  import {notifications} from '$lib/web/notifications';\n</script>\n\n<div\n  class=\"z-50 fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"\n>\n  {#if $notifications.current}\n    <Notification\n      title={$notifications.current.title}\n      text={$notifications.current.text}\n      type={$notifications.current.type}\n      on:close={() => notifications.acknowledge()}\n    />\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import {onMount} from 'svelte';\n  function beforeinstallprompt(event: Event) {\n    event.preventDefault();\n  }\n  onMount(() => {\n    window.addEventListener('beforeinstallprompt', beforeinstallprompt);\n  });\n</script>\n\n<!-- this fails typing, so instead we use onMount-->\n<!-- <svelte:window on:beforeinstallprompt={beforeinstallprompt} /> -->\n","<script lang=\"ts\">\n  import {serviceWorker} from '$lib/web/serviceWorker';\n  import {base} from '$app/paths';\n\n  function skip() {\n    $serviceWorker.updateAvailable = false;\n  }\n\n  function reload() {\n    if ($serviceWorker.updateAvailable && $serviceWorker.registration) {\n      if ($serviceWorker.registration.waiting) {\n        $serviceWorker.registration.waiting.postMessage('skipWaiting');\n      } else {\n        console.error(`not waiting..., todo reload?`);\n        // window.location.reload();\n      }\n      $serviceWorker.updateAvailable = false;\n    }\n  }\n</script>\n\n<!-- <svelte:window on:click={skip} /> -->\n\n{#if $serviceWorker.updateAvailable && $serviceWorker.registration}\n  <div\n    on:click={(e) => {\n      e.preventDefault();\n      e.stopPropagation();\n    }}\n    class=\"z-50 fixed inset-0 flex items-end justify-center px-4 py-6 pointer-events-none sm:p-6 sm:items-start sm:justify-end\"\n  >\n    <!--\n    Notification panel, show/hide based on alert state.\n\n    Entering: \"transform ease-out duration-300 transition\"\n      From: \"translate-y-2 opacity-0 sm:translate-y-0 sm:translate-x-2\"\n      To: \"translate-y-0 opacity-100 sm:translate-x-0\"\n    Leaving: \"transition ease-in duration-100\"\n      From: \"opacity-100\"\n      To: \"opacity-0\"\n  -->\n    <div class=\"max-w-sm w-full dark:bg-gray-800 bg-white shadow-lg rounded-lg pointer-events-auto\">\n      <div class=\"p-4\">\n        <div class=\"flex items-start\">\n          <div class=\"flex-shrink-0 pt-0.5\">\n            <img class=\"h-10 w-10 rounded-full\" src={`${base}/maskable_icon_512x512.png`} alt=\"Union Quest\" />\n          </div>\n          <div class=\"ml-3 w-0 flex-1\">\n            <p class=\"text-sm font-medium dark:text-gray-100 text-black\">\n              A new version is available. Reload to get the update.\n            </p>\n            <!-- <p class=\"mt-1 text-sm text-gray-500\">\n            Install it for later\n          </p> -->\n            <div class=\"mt-4 flex\">\n              <button\n                on:click={reload}\n                type=\"button\"\n                class=\"inline-flex items-center px-3 py-2 border border-transparent shadow-sm text-sm leading-4 font-medium rounded-md text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500\"\n              >\n                Reload\n              </button>\n              <button\n                on:click={skip}\n                type=\"button\"\n                class=\"ml-3 inline-flex items-center px-3 py-2 border border-red-800 shadow-sm text-sm leading-4 font-medium rounded-md text-gray-200 bg-red-500 hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-300\"\n              >\n                Skip\n              </button>\n            </div>\n          </div>\n          <div class=\"ml-4 flex-shrink-0 flex\">\n            <button\n              on:click={skip}\n              class=\"dark:bg-gray-900 bg-white rounded-md inline-flex text-red-400 hover:text-red-500 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-red-500\"\n            >\n              <span class=\"sr-only\">Close</span>\n              <!-- Heroicon name: solid/x -->\n              <svg\n                class=\"h-5 w-5\"\n                xmlns=\"http://www.w3.org/2000/svg\"\n                viewBox=\"0 0 20 20\"\n                fill=\"currentColor\"\n                aria-hidden=\"true\"\n              >\n                <path\n                  fill-rule=\"evenodd\"\n                  d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\"\n                  clip-rule=\"evenodd\"\n                />\n              </svg>\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n{/if}\n","import {writable} from 'svelte/store';\n\nconst darkMode = typeof document !== 'undefined' && document.documentElement.classList.contains('dark');\n\nconst darkModeStore = writable(darkMode);\nif (typeof localStorage !== 'undefined') {\n  darkModeStore.subscribe((value) => {\n    localStorage.setItem('theme', value ? 'dark' : 'light');\n    if (value) {\n      document.documentElement.classList.add('dark');\n    } else {\n      document.documentElement.classList.remove('dark');\n    }\n  });\n}\nexport default darkModeStore;\n","<script lang=\"ts\">\n  import darkMode from '$lib/web/darkMode';\n</script>\n\n<div class=\"dark:text-white\">\n  <button on:click={() => ($darkMode = !$darkMode)}>\n    {#if $darkMode}\n      <svg class=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width={2}\n          d=\"M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z\"\n        />\n      </svg>\n    {:else}\n      <svg class=\"w-8 h-8\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n        <path\n          stroke-linecap=\"round\"\n          stroke-linejoin=\"round\"\n          stroke-width={2}\n          d=\"M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z\"\n        />\n      </svg>\n    {/if}\n  </button>\n</div>\n","<script lang=\"ts\">\n  import '../service-worker-handler';\n  import '../global.css';\n  import {url} from '$lib/utils/url';\n  import NavBar from '$lib/components/styled/navigation/NavBar.svelte';\n  import Notifications from '$lib/components/styled/notification/Notifications.svelte';\n  import NoInstallPrompt from '$lib/components/generic/NoInstallPrompt.svelte';\n  import NewVersionNotification from '$lib/components/styled/NewVersionNotification.svelte';\n  import DarkSwitch from '$lib/components/styled/DarkSwitch.svelte';\n  import Blockie from '$lib/components/generic/CanvasBlockie.svelte';\n\n  import {appDescription, url as appUrl} from '../application.json';\n  import {wallet} from '$lib/blockchain/wallet';\n\n  const title = 'Union Quest, Template for Decentralised Applications.';\n  const description = appDescription;\n  const host = appUrl.endsWith('/') ? appUrl : appUrl + '/';\n  const previewImage = host + 'preview.png';\n</script>\n\n<svelte:head>\n  <title>{title}</title>\n  <meta name=\"title\" content={title} />\n  <meta name=\"description\" content={description} />\n  <meta property=\"og:type\" content=\"website\" />\n  <meta property=\"og:url\" content={host} />\n  <meta property=\"og:title\" content={title} />\n  <meta property=\"og:description\" content={description} />\n  <meta property=\"og:image\" content={previewImage} />\n  <meta property=\"twitter:card\" content=\"summary_large_image\" />\n  <meta property=\"twitter:url\" content={host} />\n  <meta property=\"twitter:title\" content={title} />\n  <meta property=\"twitter:description\" content={description} />\n  <meta property=\"twitter:image\" content={previewImage} />\n</svelte:head>\n\n<NoInstallPrompt />\n<NewVersionNotification />\n\n<NavBar\n  links={[\n    {href: url(''), title: 'Home'},\n    {href: url('map/'), title: 'Map'},\n  ]}\n/>\n\n<div class=\"absolute top-0 right-0 m-2 flex\">\n  {#if $wallet.address}\n    <Blockie address={$wallet.address} class=\"mr-2 h-8 w-8\" />\n  {/if}\n  <DarkSwitch />\n</div>\n\n<slot />\n<Notifications />\n"],"names":["get","console","url","appUrl"],"mappings":"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"}