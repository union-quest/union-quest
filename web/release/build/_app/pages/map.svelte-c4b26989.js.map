{"version":3,"file":"map.svelte-c4b26989.js","sources":["../../../../../src/lib/components/generic/CanvasBlockie.svelte","../../../../../src/lib/components/styled/Modal.svelte","../../../../../src/lib/blockchain/WalletAccess.svelte","../../../../../src/lib/utils/graphql/constants.ts","../../../../../src/lib/utils/graphql/endpoint.ts","../../../../../src/lib/blockchain/subgraph.ts","../../../../../src/lib/utils/stores/base.ts","../../../../../src/lib/utils/stores/graphql.ts","../../../../../src/lib/player/players.ts","../../../../../src/lib/player/player.ts","../../../../../src/lib/components/DaiSymbol.svelte","../../../../../src/lib/item/items.ts","../../../../../src/lib/components/Shop.svelte","../../../../../src/lib/recipe/recipes.ts","../../../../../src/lib/components/Crafting.svelte","../../../../../src/lib/components/PlayerInfo.svelte","../../../../../src/lib/components/TileModal.svelte","../../../../../src/lib/components/MapCanvas.svelte","../../../../../src/routes/map.svelte"],"sourcesContent":["<script lang=\"ts\">\n  // blockie generation code from https://github.com/stephensprinkle/react-blockies, itself referenced from https://github.com/alexvandesande/blockies\n  import {afterUpdate} from 'svelte';\n\n  export let _class = '';\n  export {_class as class};\n  export let address: string;\n  export let scale = 4;\n\n  let lastOptions:\n    | {\n        address: string;\n        scale: number;\n      }\n    | undefined = undefined;\n\n  let canvas: HTMLCanvasElement;\n\n  // The random number is a js implementation of the Xorshift PRNG\n  const randseed = new Array(4); // Xorshift: [x, y, z, w] 32 bit values\n\n  function seedrand(seed: string): void {\n    for (let i = 0; i < randseed.length; i++) {\n      randseed[i] = 0;\n    }\n    for (let i = 0; i < seed.length; i++) {\n      randseed[i % 4] = (randseed[i % 4] << 5) - randseed[i % 4] + seed.charCodeAt(i);\n    }\n  }\n\n  function rand(): number {\n    // based on Java's String.hashCode(), expanded to 4 32bit values\n    const t = randseed[0] ^ (randseed[0] << 11);\n\n    randseed[0] = randseed[1];\n    randseed[1] = randseed[2];\n    randseed[2] = randseed[3];\n    randseed[3] = randseed[3] ^ (randseed[3] >> 19) ^ t ^ (t >> 8);\n\n    return (randseed[3] >>> 0) / ((1 << 31) >>> 0);\n  }\n\n  function createColor(): string {\n    // saturation is the whole color spectrum\n    const h = Math.floor(rand() * 360);\n    // saturation goes from 40 to 100, it avoids greyish colors\n    const s = rand() * 60 + 40 + '%';\n    // lightness can be anything from 0 to 100, but probabilities are a bell curve around 50%\n    const l = (rand() + rand() + rand() + rand()) * 25 + '%';\n\n    const color = 'hsl(' + h + ',' + s + ',' + l + ')';\n    return color;\n  }\n\n  function createImageData(size: number): number[] {\n    const width = size; // Only support square icons for now\n    const height = size;\n\n    const dataWidth = Math.ceil(width / 2);\n    const mirrorWidth = width - dataWidth;\n\n    const data = [];\n    for (let y = 0; y < height; y++) {\n      let row = [];\n      for (let x = 0; x < dataWidth; x++) {\n        // this makes foreground and background color to have a 43% (1/2.3) probability\n        // spot color has 13% chance\n        row[x] = Math.floor(rand() * 2.3);\n      }\n      const r = row.slice(0, mirrorWidth);\n      r.reverse();\n      row = row.concat(r);\n\n      for (let i = 0; i < row.length; i++) {\n        data.push(row[i]);\n      }\n    }\n\n    return data;\n  }\n\n  function setCanvas(\n    canvas: HTMLCanvasElement,\n    imageData: number[],\n    color: string,\n    scale: number,\n    bgcolor: string,\n    spotcolor: string\n  ) {\n    const width = Math.sqrt(imageData.length);\n    const size = width * scale;\n\n    canvas.width = size;\n    canvas.height = size;\n\n    const cc = canvas.getContext('2d');\n    if (cc) {\n      cc.fillStyle = bgcolor;\n      cc.fillRect(0, 0, canvas.width, canvas.height);\n      cc.fillStyle = color;\n\n      for (let i = 0; i < imageData.length; i++) {\n        // if data is 2, choose spot color, if 1 choose foreground\n        cc.fillStyle = imageData[i] === 1 ? color : spotcolor;\n\n        // if data is 0, leave the background\n        if (imageData[i]) {\n          const row = Math.floor(i / width);\n          const col = i % width;\n\n          cc.fillRect(col * scale, row * scale, scale, scale);\n        }\n      }\n    } else {\n      console.error(`could not create 2d context for Blockie canvas`);\n    }\n  }\n\n  function update() {\n    if (lastOptions && lastOptions.address === address && lastOptions.scale === scale) {\n      return;\n    }\n    lastOptions = {\n      address,\n      scale,\n    };\n\n    seedrand((address && address.toLowerCase()) || '0x0000000000000000000000000000000000000000');\n    const color = createColor();\n    const bgcolor = createColor();\n    const spotcolor = createColor();\n    const imageData = createImageData(8);\n    setCanvas(canvas, imageData, color, scale, bgcolor, spotcolor);\n  }\n\n  afterUpdate(update);\n</script>\n\n<canvas class={_class} bind:this={canvas} id={address.toLowerCase()} />\n\n<style>\n  canvas {\n    image-rendering: -moz-crisp-edges;\n    image-rendering: -webkit-crisp-edges;\n    image-rendering: pixelated;\n    image-rendering: crisp-edges;\n  }\n</style>\n","<script lang=\"ts\">\n  import {createEventDispatcher, onDestroy} from 'svelte';\n  export let globalCloseButton = false;\n  export let closeButton = false;\n  export let title = '';\n  export let cancelable = true;\n\n  const dispatch = createEventDispatcher();\n  const close = () => cancelable && dispatch('close');\n\n  let modal: Element;\n\n  function handle_keydown(evt: KeyboardEvent | undefined) {\n    evt = evt || (window.event as KeyboardEvent);\n    var isEscape = false;\n    if ('key' in evt) {\n      isEscape = evt.key === 'Escape' || evt.key === 'Esc';\n    } else {\n      isEscape = (evt as KeyboardEvent).keyCode === 27;\n    }\n    if (isEscape) {\n      close();\n      return;\n    }\n\n    if (evt.key === 'Tab') {\n      // trap focus\n      const nodes = modal.querySelectorAll('*');\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      const tabbable = Array.from(nodes).filter((n: any) => n.tabIndex >= 0);\n\n      let index = -1;\n      if (document.activeElement) {\n        index = tabbable.indexOf(document.activeElement);\n      }\n      if (index === -1 && evt.shiftKey) index = 0;\n\n      index += tabbable.length + (evt.shiftKey ? -1 : 1);\n      index %= tabbable.length;\n\n      (tabbable[index] as HTMLElement).focus && (tabbable[index] as HTMLElement).focus();\n      evt.preventDefault();\n    }\n  }\n\n  const previously_focused = typeof document !== 'undefined' && document.activeElement;\n\n  if (previously_focused) {\n    onDestroy(() => {\n      const htmlElement = previously_focused as HTMLElement;\n      if (htmlElement.focus) {\n        htmlElement.focus();\n      }\n    });\n  }\n</script>\n\n<svelte:window on:keydown={handle_keydown} />\n\n<!-- container -->\n<div class=\"z-50 fixed w-full h-full top-0 left-0 flex items-center justify-center text-black dark:text-white\">\n  <!-- clickable dark overlay -->\n  <div on:click={close} class=\"absolute w-full h-full bg-gray-900 opacity-80\" />\n\n  <!--modal-->\n  <div\n    class=\"absolute border-2 w-11/12 md:max-w-md mx-auto overflow-y-auto max-h-screen dark:bg-black dark:border-2 dark:border-gray-800 bg-white\"\n  >\n    {#if globalCloseButton}\n      <div\n        on:click={close}\n        class=\"modal-close absolute top-0 right-0 cursor-pointer flex flex-col items-center mt-4 mr-4 text-sm\"\n      >\n        <svg\n          class=\"fill-current text-white\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"18\"\n          height=\"18\"\n          viewBox=\"0 0 18 18\"\n        >\n          <path\n            d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n          />\n        </svg>\n        <span class=\"text-sm\">(Esc)</span>\n      </div>\n    {/if}\n\n    <!-- Add margin if you want to see some of the overlay behind the modal-->\n    <div class=\"modal-content py-4 text-left px-6\" bind:this={modal}>\n      <div class=\"flex justify-between items-center\">\n        <!--Title-->\n        {#if title}\n          <p class=\"text-2xl font-bold\">{title}</p>\n        {/if}\n        {#if closeButton}\n          <div on:click={close} class=\"modal-close cursor-pointer z-50\">\n            <svg\n              class=\"fill-current text-black\"\n              xmlns=\"http://www.w3.org/2000/svg\"\n              width=\"18\"\n              height=\"18\"\n              viewBox=\"0 0 18 18\"\n            >\n              <path\n                d=\"M14.53 4.53l-1.06-1.06L9 7.94 4.53 3.47 3.47 4.53 7.94 9l-4.47 4.47 1.06 1.06L9 10.06l4.47 4.47 1.06-1.06L10.06 9z\"\n              />\n            </svg>\n          </div>\n        {/if}\n      </div>\n\n      <!--Body-->\n      <slot />\n\n      <!--Footer-->\n      <div class=\"flex justify-end pt-2\">\n        <slot name=\"footer\" />\n      </div>\n    </div>\n  </div>\n</div>\n","<script lang=\"ts\">\n  export let title = '';\n  import {chainId, chainName, fallbackProviderOrUrl, webWalletURL} from '$lib/config';\n  import NavButton from '$lib/components/styled/navigation/NavButton.svelte';\n  import Modal from '$lib/components/styled/Modal.svelte';\n  import {base} from '$app/paths';\n  import {wallet, builtin, chain, flow, fallback} from '$lib/blockchain/wallet';\n\n  $: executionError = $flow.executionError as any;\n\n  let options: {img: string; id: string; name: string}[] = [];\n  $: builtinNeedInstalation = $wallet.options.filter((v) => v === 'builtin' && !$builtin.available).length > 0;\n  $: options = $wallet.options\n    .filter((v) => v !== 'builtin' || $builtin.available)\n    .map((v) => {\n      return {\n        img: ((v) => {\n          if (v === 'builtin') {\n            if ($builtin.state === 'Ready') {\n              if ($builtin.vendor === 'Metamask') {\n                return 'images/metamask.svg';\n              } else if ($builtin.vendor === 'Opera') {\n                return 'images/opera.svg';\n              }\n            }\n            return 'images/web3-default.png';\n          } else {\n            if (v.startsWith('torus-')) {\n              const verifier = v.slice(6);\n              return `images/torus/${verifier}.svg`;\n            }\n            return `images/${v}.svg`;\n          }\n        })(v),\n        id: v,\n        name: v,\n      };\n    });\n\n  function acknowledgeNewGenesis() {\n    chain.acknowledgeNewGenesisHash();\n  }\n\n  async function switchChain() {\n    let blockExplorerUrls: string[] | undefined;\n    const explorerTXURL = import.meta.env.VITE_BLOCK_EXPLORER_TRANSACTION as string;\n    if (explorerTXURL) {\n      blockExplorerUrls.push(explorerTXURL.slice(0, explorerTXURL.length - 2));\n    }\n    const rpcUrls = [];\n    if (webWalletURL) {\n      rpcUrls.push(webWalletURL);\n    }\n    if (fallbackProviderOrUrl) {\n      rpcUrls.push(fallbackProviderOrUrl);\n    }\n    await chain.switchChain(chainId, {chainName, rpcUrls, blockExplorerUrls});\n  }\n</script>\n\n<slot />\n\n{#if $chain.state === 'Idle' && !$chain.connecting && $fallback.state === 'Idle' && !$fallback.connecting}\n  <!-- Not Used Here: No need of node connection -->\n  <!-- <div\n    class=\"w-full flex items-center justify-center fixed top-0 pointer-events-none\"\n    style=\"z-index: 5;\">\n    <p\n      class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Please Connect.\n    </p>\n  </div> -->\n{:else if $chain.state === 'Idle' && !$chain.connecting && $fallback.error}\n  <!-- Not Used Here: No need of node connection, we should check thegraph connection instead -->\n  <!-- <div\n    class=\"w-full flex items-center justify-center fixed top-0 pointer-events-none\"\n    style=\"z-index: 5;\">\n    <p\n      class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Network Issues, Please Connect.\n    </p>\n  </div> -->\n{:else if $chain.notSupported}\n  <div class=\"w-full flex items-center justify-center fixed top-0\" style=\"z-index: 5;\">\n    <p class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-pink-600 p-1\">\n      Wrong network, switch to\n      {chainName}\n      <button class=\"border-2 border-white p-2\" on:click={switchChain}>OK</button>\n    </p>\n  </div>\n{:else if $chain.genesisChanged}\n  <div class=\"w-full flex items-center justify-center fixed top-0\" style=\"z-index: 5;\">\n    <p class=\"w-64 text-center rounded-bl-xl rounded-br-xl text-gray-200 bg-red-500 p-1\">\n      chain reset detected! Metamask need to have its account reset! <button\n        class=\"border-2 border-white p-2\"\n        on:click={acknowledgeNewGenesis}>OK</button\n      >\n    </p>\n  </div>\n{/if}\n\n{#if $wallet.error}\n  <Modal title=\"An Error Happened\" on:close={() => wallet.acknowledgeError()}>\n    <p class=\"w-64 text-center text-red-500 p-1\">\n      {$wallet.error.message}\n    </p>\n  </Modal>\n{:else if $chain.error}\n  <Modal title=\"An Error Happened\" on:close={() => chain.acknowledgeError()}>\n    <p class=\"w-64 text-center text-red-500 p-1\">\n      {$chain.error.message}\n    </p>\n  </Modal>\n{:else if $flow.inProgress}\n  <Modal {title} cancelable={!$wallet.connecting} on:close={() => flow.cancel()} closeButton={false}>\n    {#if $wallet.state === 'Idle'}\n      {#if $wallet.loadingModule}\n        Loading module:\n        {$wallet.selected}\n      {:else if $wallet.connecting}\n        Connecting to wallet...\n      {:else}\n        <div class=\"text-center\">\n          <p>You need to connect your wallet.</p>\n        </div>\n        <div class=\"flex flex-wrap justify-center pb-3\">\n          {#each options as option}\n            <img\n              class=\"cursor-pointer p-2 m-2 border-2 h-12 w-12 object-contain\"\n              alt={`Login with ${option.name}`}\n              src={`${base}/${option.img}`}\n              on:click={() => wallet.connect(option.id)}\n            />\n          {/each}\n        </div>\n        {#if builtinNeedInstalation}\n          <div class=\"text-center\">OR</div>\n          <div class=\"flex justify-center\">\n            <NavButton\n              label=\"Download Metamask\"\n              blank={true}\n              href=\"https://metamask.io/download.html\"\n              class=\"m-4 w-max-content\"\n            >\n              <img\n                class=\"cursor-pointer p-0 mx-2 h-10 w-10 object-contain\"\n                alt={`Download Metamask}`}\n                src={`${base}/images/metamask.svg`}\n              />\n              Download metamask\n            </NavButton>\n          </div>\n        {/if}\n      {/if}\n    {:else if $wallet.state === 'Locked'}\n      {#if $wallet.unlocking}\n        Please accept the application to access your wallet.\n      {:else}\n        <NavButton label=\"Unlock Wallet\" on:click={() => wallet.unlock()}>Unlock</NavButton>\n      {/if}\n    {:else if $chain.state === 'Idle'}\n      {#if $chain.connecting}\n        Connecting...\n      {:else if $chain.error}\n        <div class=\"text-center\">\n          <p>{$chain.error?.message || '' + $chain.error}</p>\n          <NavButton class=\"mt-4\" label=\"OK\" on:click={() => flow.cancel()}>OK</NavButton>\n        </div>\n      {/if}\n    {:else if $chain.state === 'Connected'}\n      {#if $chain.loadingData}\n        Loading contracts...\n      {:else if $chain.notSupported}\n        Please switch to\n        {chainName}\n        <!-- ({$chain.chainId}) -->\n        <NavButton label=\"Unlock Wallet\" on:click={switchChain}>Switch</NavButton>\n      {/if}\n    {:else if executionError}\n      <div class=\"text-center\">\n        <p>\n          {#if executionError.code === 4001}\n            You rejected the request\n          {:else if executionError.message}{executionError.message}{:else}Error: {executionError}{/if}\n        </p>\n        <NavButton class=\"mt-4\" label=\"Retry\" on:click={() => flow.retry()}>Retry</NavButton>\n      </div>\n    {:else if $wallet.pendingUserConfirmation}\n      {#if $wallet.pendingUserConfirmation[0] === 'transaction'}\n        Please accept transaction...\n      {:else if $wallet.pendingUserConfirmation[0] === 'signature'}\n        Please accept signature...\n      {:else}Please accept request...{/if}\n    {:else if $wallet.state === 'Ready'}\n      Please wait...\n    {:else}\n      <div class=\"text-center\">\n        <p>Flow aborted {$wallet.state}</p>\n        <NavButton class=\"mt-4\" label=\"Cancel\" on:click={() => flow.cancel()}>OK</NavButton>\n      </div>\n    {/if}\n  </Modal>\n{/if}\n","export const initialState: {\n  fetching: boolean;\n  stale: boolean;\n  error: unknown;\n  data?: Record<string, unknown>;\n  extensions?: Record<string, unknown>;\n} = {\n  fetching: false,\n  stale: false,\n  error: undefined,\n  data: undefined,\n  extensions: undefined,\n};\n","import {Client, defaultExchanges} from '@urql/core';\nimport type {OperationContext, OperationResult} from '@urql/core';\nimport {devtoolsExchange} from '@urql/devtools';\nimport type {DocumentNode} from 'graphql';\nimport {pipe, fromValue, concat, scan, map, subscribe} from 'wonka';\nimport {initialState} from './constants';\nimport type {sourceT} from 'wonka/dist/types/src/Wonka_types.gen';\n\nexport type InternalQueryState<T> = {\n  fetching: boolean;\n  stale: boolean;\n  data: T;\n  error: unknown;\n  extensions: Record<string, unknown>;\n};\n\nconst exchanges = defaultExchanges.concat();\n\nif (import.meta.env.MODE === 'development') {\n  exchanges.unshift(devtoolsExchange);\n}\n\nexport class EndPoint {\n  private client: Client;\n  constructor(url: string) {\n    if (!url) {\n      console.error(`need an url for graphql queries`);\n    } else {\n      this.client = new Client({\n        url,\n        exchanges,\n      });\n    }\n  }\n\n  mutate<Data = unknown, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n    }\n  ): Promise<OperationResult<Data>> {\n    return this.client.mutation(query, args?.variables, args?.context).toPromise();\n  }\n\n  query<Data, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n      // TODO path?: string\n    }\n  ): Promise<OperationResult<Data, Variables>> {\n    return this.client.query(query, args?.variables, args?.context).toPromise();\n  }\n\n  async queryList<T, Variables extends Record<string, unknown> = Record<string, unknown>>(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n      path?: string;\n      getLastId?: (entries: T[]) => string;\n    }\n  ): Promise<T[]> {\n    const fields = args.path.split('.');\n    const first = 100;\n    let lastId = '0x0';\n    let numEntries = first;\n    let entries: T[] = [];\n    while (numEntries === first) {\n      const result = await this.client.query(query, {first, lastId, ...args?.variables}, args?.context).toPromise();\n      if (result.error) {\n        throw new Error(result.error.message);\n      }\n      const data = result.data;\n\n      // TODO deep access on root array\n      let newEntries = [];\n      if (data && args.path) {\n        let tmp = data;\n        for (const fieldPart of fields) {\n          tmp = tmp[fieldPart];\n        }\n        newEntries = tmp;\n      }\n\n      numEntries = newEntries.length;\n      if (numEntries > 0) {\n        const newLastId = args?.getLastId !== undefined ? args?.getLastId(entries) : newEntries[numEntries - 1].id;\n        if (lastId === newLastId) {\n          console.log('same query, stop');\n          break;\n        }\n        lastId = newLastId;\n      }\n      entries = entries.concat(newEntries);\n    }\n    return entries;\n  }\n\n  subscribeToQuery<\n    Data extends Record<string, unknown>,\n    Variables extends Record<string, unknown> = Record<string, unknown>\n  >(\n    query: DocumentNode | string,\n    args?: {\n      variables?: Variables;\n      context?: Partial<OperationContext>;\n    }\n  ): {\n    subscribe: (value: (value: InternalQueryState<Data>) => void) => () => void;\n  } {\n    const queryResult$ = pipe(\n      concat([\n        fromValue({fetching: true, stale: false}),\n        pipe(\n          this.client.query(query, args?.variables, args?.context),\n          map(({stale, data, error, extensions}) => ({\n            fetching: false,\n            stale: !!stale,\n            data,\n            error,\n            extensions,\n          }))\n        ),\n        fromValue({fetching: false, stale: false}),\n      ]),\n      scan(\n        (result, partial) => ({\n          ...result,\n          ...partial,\n        }),\n        initialState\n      )\n    );\n\n    return {\n      subscribe(onValue) {\n        return pipe(queryResult$ as sourceT<InternalQueryState<Data>>, subscribe(onValue)).unsubscribe;\n      },\n    };\n  }\n}\n","import {EndPoint} from '$lib/utils/graphql/endpoint';\nimport {graphNodeURL} from '$lib/config';\n\nexport const SUBGRAPH_ENDPOINT = new EndPoint(graphNodeURL);\n","import {writable} from 'svelte/store';\nimport type {Readable, Writable} from 'svelte/store';\n\ntype DataType<T> = Record<string, unknown> & {data?: T};\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types, @typescript-eslint/no-explicit-any\nfunction _recurseSet(target: any, obj: any) {\n  for (const key of Object.keys(obj)) {\n    if (target[key] && typeof target[key] === 'object' && typeof obj[key] === 'object') {\n      _recurseSet(target[key], obj[key]);\n    } else {\n      target[key] = obj[key];\n    }\n  }\n}\n\nexport class BasicObjectStore<T extends Record<string, number | string>> implements Readable<T> {\n  protected store: Writable<T>;\n  protected __set: (newValue: T) => void;\n  private value: T;\n  private oldValue: T;\n  constructor(initialValue?: T) {\n    this.value = initialValue;\n    this.oldValue = {...initialValue};\n    this.store = writable(this.value, this._start.bind(this));\n  }\n\n  public get $store(): T {\n    return this.value;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  protected _start(_: (newValue: T) => void): void {\n    return this._stop.bind(this);\n  }\n\n  protected _stop(): void {}\n\n  protected _set(newValue: T): void {\n    let changes = false;\n    if (!this.value) {\n      this.value = {...newValue};\n      changes = true;\n    } else {\n      for (const key of Object.keys(this.oldValue)) {\n        if (newValue[key] !== this.oldValue[key]) {\n          changes = true;\n          (this.value as Record<string, unknown>)[key] = newValue[key];\n        }\n      }\n      for (const key of Object.keys(newValue)) {\n        if (newValue[key] !== this.oldValue[key]) {\n          changes = true;\n          (this.value as Record<string, unknown>)[key] = newValue[key];\n        }\n      }\n    }\n\n    if (changes) {\n      this.oldValue = {...this.value};\n      this.store.set(this.value);\n    }\n  }\n\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport class BaseStore<T extends Record<string, unknown>> implements Readable<T> {\n  protected store: Writable<T>;\n  constructor(protected readonly $store: T) {\n    this.store = writable(this.$store);\n  }\n\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    return this.store.subscribe(run, invalidate);\n  }\n\n  protected setPartial(obj: Partial<T>): T {\n    if (!this.$store) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = {};\n    }\n    for (const key of Object.keys(obj)) {\n      (this.$store as Record<string, unknown>)[key] = obj[key];\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n  protected set(obj: T): T {\n    if (!this.$store) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = {};\n    }\n\n    if (!obj) {\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n      (this.$store as any) = obj;\n    }\n    // Testing hmr for subclasses\n    //   const objAny: any = obj;\n    //   objAny.value += 7;\n    if (obj !== this.$store) {\n      for (const key of Object.keys(this.$store)) {\n        if (obj[key] === undefined) {\n          (this.$store as Record<string, unknown>)[key] = undefined;\n        }\n      }\n      for (const key of Object.keys(obj)) {\n        (this.$store as Record<string, unknown>)[key] = obj[key];\n      }\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n}\n\nexport class BaseStoreWithData<T extends DataType<U>, U> extends BaseStore<T> {\n  constructor($store: T) {\n    super($store);\n  }\n\n  protected setData(data: Partial<U>, extra?: Partial<T>): T {\n    this.$store.data = this.$store.data || ({} as U); // this assume setData was set before ?\n    _recurseSet(this.$store.data, data);\n    if (extra) {\n      this.setPartial(extra);\n    }\n    this.store.set(this.$store);\n    return this.$store;\n  }\n}\n\nexport abstract class AutoStartBaseStore<T extends Record<string, unknown>> extends BaseStore<T> {\n  private _listenerCount = 0;\n  private _stopUpdates?: () => void;\n  subscribe(run: (value: T) => void, invalidate?: (value?: T) => void): () => void {\n    this._listenerCount++;\n    if (this._listenerCount === 1) {\n      console.info(`starting...`);\n      this._stopUpdates = this._onStart();\n    }\n    const unsubscribe = this.store.subscribe(run, invalidate);\n    return () => {\n      this._listenerCount--;\n      if (this._listenerCount === 0) {\n        console.info(`stopping`);\n        if (this._stopUpdates) {\n          this._stopUpdates();\n          this._stopUpdates = undefined;\n        }\n      }\n      unsubscribe();\n    };\n  }\n\n  abstract _onStart(): (() => void) | undefined;\n}\n","import type {EndPoint} from '../graphql/endpoint';\nimport type {Readable} from 'svelte/store';\nimport {BaseStoreWithData} from './base';\nimport {logs} from 'named-logs';\nconst console = logs('graphql');\n\ntype ChainTempoInfo = {lastBlockNumber?: number; stale: boolean};\n\nexport type Hook = {subscribe: (f: (chainInfo: ChainTempoInfo) => void) => () => void};\n\nexport type QueryState<T> = {\n  step: 'IDLE' | 'LOADING' | 'READY';\n  data?: T;\n  error?: string;\n};\n\nexport type ListOptions =\n  | {\n      path?: string;\n      getLastId?: (entries: unknown[]) => string;\n    }\n  | boolean;\n\nexport type QueryStore<T> = Readable<QueryState<T>> & {\n  acknowledgeError: () => void;\n};\n\nexport type QueryStoreWithFetch<T> = QueryStore<T> & {\n  fetch(extraVariables?: Record<string, unknown>): Promise<void>;\n};\n\nexport type QueryStoreWithRuntimeVariables<T> = QueryStoreWithFetch<T> & {\n  runtimeVariables: Record<string, string>;\n};\n\nclass BaseQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseStoreWithData<QueryState<T>, T>\n  implements QueryStoreWithRuntimeVariables<T>\n{\n  public runtimeVariables: Record<string, string> = {};\n  public constructor(\n    private endpoint: EndPoint,\n    private query: string,\n    private options?: {\n      variables?: V;\n      path?: string;\n      list?: ListOptions;\n    }\n  ) {\n    super({\n      step: 'IDLE',\n    });\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  async fetch(extraVariables?: Record<string, unknown>): Promise<void> {\n    console.info('fetching....');\n    const first =\n      typeof this.options?.variables?.first === 'number' ? (this.options?.variables?.first as number) : 1000;\n    let numEntries = first;\n    let lastId = '0x0';\n    let data: T;\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let list: any[];\n    while (numEntries === first) {\n      try {\n        const variables = {first, lastId, ...this.options?.variables, ...this.runtimeVariables, ...extraVariables};\n        const querySplitted = this.query.split('?');\n        let query = '';\n        for (let i = 0; i < querySplitted.length; i++) {\n          const split = querySplitted[i];\n          if (split.startsWith('$')) {\n            if (!variables[split.substr(1)]) {\n              i++; // skip\n            }\n          } else {\n            query += split;\n          }\n        }\n        const result = await this.endpoint.query<Record<string, unknown>, V>(query, {\n          variables,\n          context: {\n            requestPolicy: 'cache-and-network', // required as cache-first will not try to get new data\n          },\n        });\n\n        if (!result.data) {\n          this.setPartial({error: `cannot fetch from thegraph node`});\n          throw new Error(`cannot fetch from thegraph node`);\n        }\n\n        const freshData = (this.options?.path ? result.data[this.options.path] : result.data) as T;\n        if (!data) {\n          data = freshData;\n        }\n\n        if (this.options?.list) {\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\n          let freshList = freshData as unknown as any[];\n          if (typeof this.options.list !== 'boolean' && this.options.list.path) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            freshList = freshData[this.options.list.path] as any[];\n          }\n\n          numEntries = freshList.length;\n          if (numEntries > 0) {\n            const newLastId =\n              typeof this.options.list !== 'boolean' && this.options.list.getLastId !== undefined\n                ? this.options.list.getLastId(freshList)\n                : freshList[numEntries - 1].id;\n            if (lastId === newLastId) {\n              console.log('same query, stop');\n              break;\n            }\n            lastId = newLastId;\n          }\n\n          if (!list) {\n            list = freshList;\n          } else {\n            list.push(...freshList);\n          }\n        } else {\n          numEntries = 0; // stop the loop\n        }\n      } catch (e) {\n        numEntries = 0;\n        console.error(e);\n      }\n    }\n    this.setPartial({data, step: 'READY'});\n  }\n}\n\nexport class TimedQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseQueryStore<T, V>\n  implements QueryStore<T>\n{\n  private timeout: NodeJS.Timeout;\n  private extraOptions: {frequency?: number};\n  public constructor(\n    endpoint: EndPoint,\n    query: string,\n    options?: {\n      variables?: V;\n      path?: string;\n      frequency?: number;\n    }\n  ) {\n    super(endpoint, query, options);\n    this.extraOptions = options;\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  async fetch(): Promise<void> {\n    await super.fetch();\n    this.timeout = setTimeout(this.fetch.bind(this), (this.extraOptions?.frequency || 1) * 1000);\n  }\n\n  start(): QueryStore<T> {\n    if (this.$store.step === 'IDLE') {\n      this.setPartial({step: 'LOADING'});\n    }\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n    }\n    this.fetch();\n    return this;\n  }\n\n  stop(): void {\n    this.setPartial({step: 'IDLE'});\n    if (this.timeout) {\n      clearTimeout(this.timeout);\n      this.timeout = undefined;\n    }\n  }\n}\n\nexport class HookedQueryStore<T, V extends Record<string, unknown> = Record<string, unknown>>\n  extends BaseQueryStore<T, V>\n  implements QueryStore<T>\n{\n  private hook: Hook;\n  public constructor(\n    endpoint: EndPoint,\n    query: string,\n    hook: Hook,\n    options?: {\n      variables?: V;\n      path?: string;\n      list?: ListOptions;\n    }\n  ) {\n    super(endpoint, query, options);\n    this.hook = hook;\n  }\n\n  acknowledgeError(): void {\n    this.setPartial({error: undefined});\n  }\n\n  private listenerCount = 0;\n  private stopUpdates?: () => void;\n  subscribe(run: (value: QueryState<T>) => void, invalidate?: (value?: QueryState<T>) => void): () => void {\n    this.listenerCount++;\n    if (this.listenerCount === 1) {\n      console.info(`start fetching`);\n      this.stopUpdates = this.hook.subscribe((chainInfo: ChainTempoInfo) =>\n        this.fetch({blockNumber: chainInfo.lastBlockNumber})\n      );\n    }\n    const unsubscribe = this.store.subscribe(run, invalidate);\n    return () => {\n      this.listenerCount--;\n      if (this.listenerCount === 0) {\n        console.info(`stop fetching`);\n        if (this.stopUpdates) {\n          this.stopUpdates();\n          this.stopUpdates = undefined;\n        }\n      }\n      unsubscribe();\n    };\n  }\n}\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\nimport type { Player } from './player';\n\nexport type Players = Player[];\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass UserStore implements QueryStore<Players> {\n  private queryStore: QueryStore<Players>;\n  private store: Readable<QueryState<Players>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      players {\n        id\n        startTimestamp\n        woodSkill\n        stoneSkill\n        vouch\n        startX\n        startY\n        endX\n        endY\n        balances {\n          id\n          value\n          item {\n            id\n            name\n            symbol\n          }\n        }\n      }\n    }`,\n      chainTempo,\n      { path: 'players' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Players>, TransactionRecord[]]): QueryState<Players> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Players>>,\n    invalidate?: Invalidator<QueryState<Players>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const players = new UserStore(SUBGRAPH_ENDPOINT, transactions);\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\nimport { AbiCoder } from '@ethersproject/abi';\nimport { keccak256 } from '@ethersproject/keccak256';\nimport { BigNumber } from '@ethersproject/bignumber';\nimport type { Item } from '$lib/item/items';\n\n\nexport type Player = {\n  id: string;\n  startX: string;\n  startY: string;\n  endX: string;\n  endY: string;\n  startTimestamp: string;\n  woodSkill: string;\n  stoneSkill: string;\n  vouch: string;\n  balances: { id: string; player: string, item?: Item, value: string }[];\n}\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass UserStore implements QueryStore<Player> {\n  private queryStore: QueryStore<Player>;\n  private store: Readable<QueryState<Player>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore, id: string) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query getPlayer($id: ID!){\n      player(id: $id) {\n        id\n      }\n    }`,\n      chainTempo,\n      { path: 'player', variables: { id: id.toLowerCase() } }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Player>, TransactionRecord[]]): QueryState<Player> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Player>>,\n    invalidate?: Invalidator<QueryState<Player>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const getPlayer = (id: string) => new UserStore(SUBGRAPH_ENDPOINT, transactions, id);\n\n/* Helpers */\n\nconst SPEED_DIVISOR = 10;\nconst SKILL_INCREASE_DIVISOR = 10;\n\nexport const distance = (x0: number, y0: number, x1: number, y1: number) => {\n  const xDiff = x1 - x0;\n  const yDiff = y1 - y0;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n}\n\nexport const getItem = (x: number, y: number) => {\n  if (x == 0 && y == 0 || x > 10 || x < -9 || y > 10 || y < -9) {\n    return 0;\n  }\n\n  const abiCoder = new AbiCoder();\n\n  const res = BigNumber.from(keccak256(abiCoder.encode(['int256', 'int256'], [x, y]))).mod(BigNumber.from(5)).toNumber();\n  if (res < 2) {\n    return 0;\n  } else if (res < 4) {\n    return 1;\n  }\n\n  return 2;\n\n}\n\nexport const getPosition = (player: Player, currentTimestamp: number): [number, number] => {\n  const distanceTravelled = (currentTimestamp - parseInt(player.startTimestamp)) / 10;\n  const distanceNeeded = distance(\n    parseInt(player.startX),\n    parseInt(player.startY),\n    parseInt(player.endX),\n    parseInt(player.endY)\n  );\n\n  if (distanceTravelled < distanceNeeded) {\n    const vX = parseInt(player.endX) - parseInt(player.startX);\n    const vY = parseInt(player.endY) - parseInt(player.startY);\n\n    return [\n      parseInt(player.startX) + (vX * distanceTravelled) / distanceNeeded,\n      parseInt(player.startY) + (vY * distanceTravelled) / distanceNeeded,\n    ];\n  }\n\n  return [parseInt(player.endX), parseInt(player.endY)];\n}\n\nexport const getSkill = (player: Player, currentTimestamp: number, resourceId: number): number => {\n  const distanceTravelled = (currentTimestamp - parseInt(player.startTimestamp)) / SPEED_DIVISOR;\n  const distanceNeeded = distance(\n    parseInt(player.startX),\n    parseInt(player.startY),\n    parseInt(player.endX),\n    parseInt(player.endY)\n  );\n\n  const savedSkill = parseInt(resourceId === 1 ? player.woodSkill : player.stoneSkill);\n\n  const tileItem = getItem(parseInt(player.endX), parseInt(player.endY));\n\n  if (distanceTravelled >= distanceNeeded && resourceId.toString() === tileItem.toString()) {\n    return savedSkill +\n      (currentTimestamp - (parseInt(player.startTimestamp) + distanceNeeded * SPEED_DIVISOR)) /\n      SKILL_INCREASE_DIVISOR;\n  }\n\n  return savedSkill;\n}\n\nexport const getBalanceStreamed = (player: Player, currentTimestamp: number, resourceId: string): number => {\n  const balanceObject = player.balances.find(b => b.item.id === resourceId.toString());\n\n  const savedBalance = balanceObject ? parseInt(balanceObject.value) : 0;\n  const savedSkill = resourceId === \"1\" ? parseInt(player.woodSkill) : parseInt(player.stoneSkill);\n\n  const distanceTravelled = (currentTimestamp - parseInt(player.startTimestamp)) / SPEED_DIVISOR;\n  const distanceNeeded = distance(\n    parseInt(player.startX),\n    parseInt(player.startY),\n    parseInt(player.endX),\n    parseInt(player.endY)\n  );\n\n  const tileItem = getItem(parseInt(player.endX), parseInt(player.endY));\n\n  if (distanceTravelled >= distanceNeeded && resourceId.toString() === tileItem.toString()) {\n    const skillIncrease = (currentTimestamp - (parseInt(player.startTimestamp) + distanceNeeded * SPEED_DIVISOR)) /\n      SKILL_INCREASE_DIVISOR;\n\n    return savedBalance + skillIncrease * savedSkill + (skillIncrease * skillIncrease) / 2;\n  }\n\n  return savedBalance;\n}\n","<svg class=\"dai\" width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n  <path\n    d=\"M8 16C12.4183 16 16 12.4183 16 8C16 3.58172 12.4183 0 8 0C3.58172 0 0 3.58172 0 8C0 12.4183 3.58172 16 8 16Z\"\n    fill=\"url(#paint0_linear)\"\n  />\n  <path\n    d=\"M12.744 6.67999H11.7947C11.272 5.22932 9.86668 4.23466 8.01334 4.23466H4.96534V6.67999H3.90668V7.55732H4.96534V8.47732H3.90668V9.35466H4.96534V11.7707H8.01334C9.84534 11.7707 11.24 10.784 11.776 9.35466H12.744V8.47732H11.9893C12.008 8.32266 12.0187 8.16266 12.0187 8.00266V7.98132C12.0187 7.83732 12.0107 7.69599 11.9973 7.55732H12.7467V6.67999H12.744ZM5.81868 5.01599H8.01334C9.37334 5.01599 10.384 5.68532 10.8507 6.67732H5.81868V5.01599ZM8.01334 10.9813H5.81868V9.35199H10.8453C10.376 10.328 9.36801 10.9813 8.01334 10.9813ZM11.136 8.02132C11.136 8.17599 11.1253 8.32799 11.104 8.47466H5.81868V7.55466H11.1067C11.1253 7.69866 11.136 7.84799 11.136 7.99999V8.02132Z\"\n    fill=\"white\"\n  />\n  <defs>\n    <linearGradient id=\"paint0_linear\" x1=\"8\" y1=\"-2.26667\" x2=\"8\" y2=\"17.68\" gradientUnits=\"userSpaceOnUse\">\n      <stop stop-color=\"#F9A606\" />\n      <stop offset=\"1\" stop-color=\"#FBCC5F\" />\n    </linearGradient>\n  </defs>\n</svg>\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\n\nexport type Item = { id: string, name: string, symbol: string, stake: string }\ntype Items = Item[];\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass ItemsStore implements QueryStore<Items> {\n  private queryStore: QueryStore<Items>;\n  private store: Readable<QueryState<Items>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      items(where: {id_in: [3, 4]}) {\n        id\n        name\n        symbol\n        stake\n      }\n    }`,\n      chainTempo,\n      { path: 'items' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Items>, TransactionRecord[]]): QueryState<Items> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Items>>,\n    invalidate?: Invalidator<QueryState<Items>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const shopItems = new ItemsStore(SUBGRAPH_ENDPOINT, transactions);\n","<script lang=\"ts\">\n  import {flow} from '$lib/blockchain/wallet';\n  import type {Player} from '$lib/player/player';\n  import {shopItems} from '$lib/item/items';\n  import Modal from './styled/Modal.svelte';\n  import DaiSymbol from './DaiSymbol.svelte';\n  import {BigNumber} from '@ethersproject/bignumber';\n\n  export let currentPlayer: Player | null;\n  export let balance: BigNumber;\n\n  async function buy(id: string, amount: string) {\n    await flow.execute((contracts) => contracts.UnionQuest.buy(id, amount));\n  }\n\n  async function sell(id: string, amount: string) {\n    await flow.execute((contracts) => contracts.UnionQuest.sell(id, amount));\n  }\n\n  let showModal = false;\n</script>\n\n<div class=\"h-full\">\n  {#if showModal}\n    <Modal title={`Shop`} on:close={() => (showModal = false)} closeButton={true}>\n      <div class=\"flex flex-col\">\n        <div class=\"flex border-2 justify-center m-2 w-fit\">\n          You own\n          {balance.div('1000000000000000000')}\n          <DaiSymbol />\n        </div>\n        <div class=\"border-2 p-2\">\n          {#if !$shopItems.step}\n            <div>Messages not loaded</div>\n          {:else if $shopItems.error}\n            <div>Error: {$shopItems.error}</div>\n          {:else if $shopItems.step === 'LOADING'}\n            <div>Loading Map...</div>\n          {:else if !$shopItems.data}\n            <div>Shop items failed to load!</div>\n          {:else}\n            {#each $shopItems.data as item}\n              <div class=\"flex flex-col border-2 border-dotted p-1\">\n                <div class=\"flex flex-row justify-between\">\n                  <div>\n                    {item.symbol}{item.name}\n                  </div>\n                  <div class=\"flex\">\n                    {item.stake}\n                    <DaiSymbol />\n                  </div>\n                </div>\n                {#if currentPlayer}\n                  <div class=\"flex\">\n                    {#if balance.gt(BigNumber.from(0))}\n                      <div class=\"border-2 w-full m-1\" on:click={() => buy(item.id, '1')}>Buy 1</div>\n                    {:else}\n                      <div class=\"border-2 w-full m-1 bg-red-400\">Buy 1</div>\n                    {/if}\n                    <div class=\"border-2 w-full m-1\" on:click={() => sell(item.id, '1')}>Sell 1</div>\n                  </div>\n                {/if}\n              </div>\n            {/each}\n          {/if}\n        </div>\n      </div>\n    </Modal>\n  {/if}\n  <div class=\"text-xl\">Shop</div>\n  <button class=\"border-2 border-gray-700 p-1\" on:click={() => (showModal = true)}>Enter the shop</button>\n</div>\n","import type { Readable } from 'svelte/store';\nimport { derived } from 'svelte/store';\nimport type { TransactionStore } from 'web3w';\nimport type { Invalidator, Subscriber, Unsubscriber } from 'web3w/dist/esm/utils/internals';\nimport { SUBGRAPH_ENDPOINT } from '$lib/blockchain/subgraph';\nimport { transactions } from '$lib/blockchain/wallet';\nimport type { QueryState, QueryStore } from '$lib/utils/stores/graphql';\nimport { HookedQueryStore } from '$lib/utils/stores/graphql';\nimport type { EndPoint } from '$lib/utils/graphql/endpoint';\nimport { chainTempo } from '$lib/blockchain/chainTempo';\nimport type { Item } from '$lib/item/items';\n\nexport type Recipe = { id: string, inputIds: Item[], inputQuantities: string, output: Item }\ntype Recipes = Recipe[];\n\n// TODO web3w needs to export the type\ntype TransactionStatus = 'pending' | 'cancelled' | 'success' | 'failure' | 'mined';\ntype TransactionRecord = {\n  hash: string;\n  from: string;\n  submissionBlockTime: number;\n  acknowledged: boolean;\n  status: TransactionStatus;\n  nonce: number;\n  confirmations: number;\n  finalized: boolean;\n  lastAcknowledgment?: TransactionStatus;\n  to?: string;\n  gasLimit?: string;\n  gasPrice?: string;\n  data?: string;\n  value?: string;\n  contractName?: string;\n  method?: string;\n  args?: unknown[];\n  eventsABI?: unknown; // TODO\n  metadata?: unknown;\n  lastCheck?: number;\n  blockHash?: string;\n  blockNumber?: number;\n  events?: unknown[]; // TODO\n};\n\nclass RecipesStore implements QueryStore<Recipes> {\n  private queryStore: QueryStore<Recipes>;\n  private store: Readable<QueryState<Recipes>>;\n  constructor(endpoint: EndPoint, private transactions: TransactionStore) {\n    this.queryStore = new HookedQueryStore(\n      endpoint,\n      `\n    query {\n      recipes {\n        id\n        inputIds {\n          id\n          name\n          symbol\n        }\n        inputQuantities\n        output {\n          id\n          name\n          symbol\n        }\n      }\n    }`,\n      chainTempo,\n      { path: 'recipes' }\n    );\n    this.store = derived([this.queryStore, this.transactions], (values) => this.update(values));\n  }\n  private update([$query]: [QueryState<Recipes>, TransactionRecord[]]): QueryState<Recipes> {\n    if (!$query.data) {\n      return $query;\n    } else {\n      let newData = $query.data;\n      return {\n        step: $query.step,\n        error: $query.error,\n        data: newData,\n      };\n    }\n  }\n\n  acknowledgeError() {\n    return this.queryStore.acknowledgeError();\n  }\n\n  subscribe(\n    run: Subscriber<QueryState<Recipes>>,\n    invalidate?: Invalidator<QueryState<Recipes>> | undefined\n  ): Unsubscriber {\n    return this.store.subscribe(run, invalidate);\n  }\n}\n\nexport const recipes = new RecipesStore(SUBGRAPH_ENDPOINT, transactions);\n","<script lang=\"ts\">\n  import {flow} from '$lib/blockchain/wallet';\n  import {getBalanceStreamed, Player} from '$lib/player/player';\n\n  import {recipes} from '$lib/recipe/recipes';\n  import {onMount} from 'svelte';\n  import Modal from './styled/Modal.svelte';\n\n  export let currentPlayer: Player | null;\n\n  async function craft() {\n    await flow.execute((contracts) => contracts.UnionQuest.craft(0));\n  }\n\n  let currentTimestamp = Date.now();\n  let showModal = false;\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      currentTimestamp = Date.now();\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<div>\n  {#if showModal}\n    <Modal title={`Crafting`} on:close={() => (showModal = false)} closeButton={true}>\n      {#if !$recipes.step}\n        <div>Messages not loaded</div>\n      {:else if $recipes.error}\n        <div>Error: {$recipes.error}</div>\n      {:else if $recipes.step === 'LOADING'}\n        <div>Loading Map...</div>\n      {:else if !$recipes.data}\n        <div>Recipes failed to load!</div>\n      {:else}\n        <div class=\"flex flex-col\">\n          <div class=\"flex justify-between text-center\">\n            <div class=\"border-2 w-full border-gray-500\">\n              {Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, '1'))} 🪵\n            </div>\n            <div class=\"border-2 w-full border-gray-500\">\n              {Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, '2'))} 🪨\n            </div>\n          </div>\n          {#each $recipes.data as recipe}\n            <div class=\"text-xl \">Recipe {recipe.id}</div>\n            <div class=\"flex flex-row justify-between m-2 border-2\">\n              <div>\n                {#each recipe.inputIds as input, i}\n                  <div class=\"border-2\">\n                    <div class=\"border-2 bg-gray-300\">{recipe.inputQuantities[i]}</div>\n                    <div class=\"border-2 text-xl\">{input.symbol}</div>\n                  </div>\n                {/each}\n              </div>\n              <div class=\"text-2xl\">➡️</div>\n              <div class=\"flex flex-col\">\n                <div class=\"border-2 text-center\">\n                  <div class=\"border-2 text-2xl\">{recipe.output.symbol}</div>\n                  <div class=\"border-2 text-xl bg-gray-300\">{recipe.output.name}</div>\n                </div>\n                {#if getBalanceStreamed(currentPlayer, currentTimestamp / 1000, recipe.inputIds[0].id) > parseInt(recipe.inputQuantities[0]) && getBalanceStreamed(currentPlayer, currentTimestamp / 1000, recipe.inputIds[1].id) > parseInt(recipe.inputQuantities[1])}\n                  <button class=\"border-2 bg-green-400 border-gray-500 p-1 m-2\" on:click={craft}> Craft </button>\n                {:else}\n                  <button class=\"border-2 bg-red-400 border-gray-500 p-1 m-2\">Craft</button>\n                {/if}\n              </div>\n            </div>\n          {/each}\n        </div>\n      {/if}\n    </Modal>\n  {/if}\n\n  <div class=\"text-xl\">Crafting</div>\n  <button class=\"border-2 border-gray-700 p-1\" on:click={() => (showModal = true)}>View the crafting table</button>\n</div>\n","<script lang=\"ts\">\n  import {chain, flow, wallet} from '$lib/blockchain/wallet';\n  import {distance, getBalanceStreamed, getItem, getPosition, getSkill, Player} from '$lib/player/player';\n  import {onMount} from 'svelte';\n  import Blockie from '$lib/components/generic/CanvasBlockie.svelte';\n  import DaiSymbol from './DaiSymbol.svelte';\n  import Modal from './styled/Modal.svelte';\n  import Shop from './Shop.svelte';\n  import Crafting from './Crafting.svelte';\n  import {BigNumber} from '@ethersproject/bignumber/src.ts';\n  import {chainId} from '$lib/config';\n\n  export let players: Player[];\n  export let currentPlayer: Player | null;\n\n  async function mint() {\n    await flow.execute((contracts) =>\n      chainId === '1337'\n        ? contracts.FaucetERC20.mint($wallet.address, '100000000000000000000')\n        : contracts.DAI.mint($wallet.address, '100000000000000000000')\n    );\n  }\n\n  async function approve() {\n    await flow.execute((contracts) =>\n      chainId === '1337'\n        ? contracts.FaucetERC20.approve(contracts.UnionQuest.address, '100000000000000000000000000000000')\n        : contracts.DAI.approve(contracts.UnionQuest.address, '100000000000000000000000000000000')\n    );\n  }\n\n  async function approveNFT() {\n    await flow.execute((contracts) => contracts.UnionQuest.setApprovalForAll(contracts.UnionQuest.address, true));\n  }\n\n  async function updateTrust() {\n    await flow.execute((contracts) => contracts.UnionQuest.updateTrust($wallet.address));\n  }\n\n  let tab = 0;\n  let showModal = false;\n\n  let currentTimestamp = Date.now();\n  let currentX = 0;\n  let currentY = 0;\n  let balance = BigNumber.from('0');\n\n  const roundBest = (n: number) => Math.round(n * 10) / 10;\n  const roundGood = (n: number) => Math.round(n * 100) / 100;\n\n  onMount(() => {\n    flow.execute((contracts) =>\n      chainId === '1337'\n        ? contracts.FaucetERC20.balanceOf($wallet.address).then((x) => (balance = x))\n        : contracts.DAI.balanceOf($wallet.address).then((x) => (balance = x))\n    );\n\n    const interval = setInterval(() => {\n      currentTimestamp = Date.now();\n\n      if (currentPlayer) {\n        [currentX, currentY] = getPosition(currentPlayer, currentTimestamp / 1000);\n      }\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<div class=\"flex flex-col text-center bg-neutral-300 w-64 h-72\">\n  {#if showModal}\n    <Modal title={`Info`} on:close={() => (showModal = false)} closeButton={true}>\n      <div class=\"p-1\">\n        As a reward for improving your skills, you are entitled to a credit line from the Bank of UnionQuest.\n      </div>\n      <div class=\"p-1\">\n        Your vouch must be manually updated and does <div class=\"inline font-bold\">not</div>\n        automatically increase when you perform an activity. This difference is indicated by the\n        <span class=\"italic\"> \"Actual Vouch\" </span>\n        and <span class=\"italic\">\"Potential Vouch\"</span> amounts.\n      </div>\n      <div class=\"border-2 bg-gray-200 border-gray-500 m-1 p-2\">\n        <a\n          rel=\"noopener\"\n          target=\"_blank\"\n          href={`https://kovan.union.finance/profile/${chain.contracts.UnionQuest.address}`}\n        >\n          View the Bank on union.finance\n        </a>\n      </div>\n    </Modal>\n  {/if}\n  <div class=\"flex text-2xl justify-center p-2\">\n    {$wallet.address.slice(0, 4)}...{$wallet.address.slice(-4)}\n    <Blockie address={$wallet.address} class=\"m-1 h-6 w-6\" />\n  </div>\n  <div class=\"flex text-2xl justify-between text-base\">\n    <div class=\"border-2 w-full border-gray-500\">\n      {Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, '1'))} 🪵\n    </div>\n    <div class=\"border-2 w-full border-gray-500\">\n      {Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, '2'))} 🪨\n    </div>\n    <div class=\"flex border-2 border-gray-500 w-full justify-center\">\n      {balance.div('1000000000000000000')}\n      <DaiSymbol />\n    </div>\n  </div>\n  <div class=\"flex text-2xl justify-start\">\n    {#each ['🎮', '📊', '🎒', '🏪', '🛠️', '🏦', '🏅', '⚙️'] as icon, i}\n      <button\n        class=\"w-12 border-2 border-gray-700 {tab === i ? 'bg-red-700' : 'bg-neutral-400'}\"\n        on:click={() => (tab = i)}\n      >\n        {icon}\n      </button>\n    {/each}\n  </div>\n  <div class=\"border-2 border-gray-700 p-2 h-full\">\n    {#if tab === 0}\n      <div>\n        <div class=\"text-xl\">Status</div>\n        <div>Location: ({Math.round(currentX)}, {Math.round(currentY)})</div>\n        {#if currentX === parseInt(currentPlayer.endX) && currentY === parseInt(currentPlayer.endY)}\n          {#if getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY)) === 0}\n            <div class=\"border-2 border-gray-600\">There's nothing to do here!</div>\n          {:else}\n            <div class=\"border-2 border-gray-600\">\n              <div>\n                Activity:\n                {#if getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY)) === 1}\n                  Woodcutting\n                {:else}\n                  Mining\n                {/if}\n              </div>\n              <div class=\"text-left\">\n                <div>\n                  {getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY)) === 1 ? '🪓' : '⛏️'}\n                  {Math.round(\n                    getSkill(\n                      currentPlayer,\n                      currentTimestamp / 1000,\n                      getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY))\n                    )\n                  )}\n                  <div class=\"inline text-sm text-green-700\">(+0.1 point/s)</div>\n                </div>\n                <div>\n                  {getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY)) === 1 ? '🪵' : '🪨'}\n                  {Math.round(\n                    getBalanceStreamed(\n                      currentPlayer,\n                      currentTimestamp / 1000,\n                      getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY)).toString()\n                    )\n                  )}\n                  <div class=\"inline text-sm text-green-700\">\n                    (+{roundBest(\n                      getSkill(\n                        currentPlayer,\n                        currentTimestamp / 1000,\n                        getItem(parseInt(currentPlayer.endX), parseInt(currentPlayer.endY))\n                      ) / 10\n                    )} units/s)\n                  </div>\n                </div>\n              </div>\n            </div>\n          {/if}\n        {:else}\n          <div class=\"border-2 border-gray-600\">\n            <div>Walking</div>\n            <div class=\"text-left\">\n              <div>\n                Walking to: ({currentPlayer.endX}, {currentPlayer.endY})\n              </div>\n              <div>\n                Distance: {roundBest(\n                  distance(currentX, currentY, parseInt(currentPlayer.endX), parseInt(currentPlayer.endY))\n                )} tiles\n                <div class=\"inline text-sm text-green-700\">(-0.1 tiles/s)</div>\n              </div>\n            </div>\n          </div>\n        {/if}\n      </div>\n    {:else if tab === 1}\n      <div>\n        <div class=\"text-xl\">Skills</div>\n        <div class=\"text-left text-lg\">\n          <div class=\"flex\">\n            <div class=\"border-2 rounded-lg border-gray-600 m-1 w-full text-center\">\n              ⛏️ {Math.round(getSkill(currentPlayer, currentTimestamp / 1000, 2))}\n            </div>\n            <div class=\"border-2 rounded-lg border-gray-600 m-1 w-full text-center\">\n              🪓 {Math.round(getSkill(currentPlayer, currentTimestamp / 1000, 1))}\n            </div>\n          </div>\n          <div class=\"border-2 rounded-lg border-gray-600 m-1 text-center\">\n            <div class=\"inline font-medium\">Total level:</div>\n            {Math.round(\n              getSkill(currentPlayer, currentTimestamp / 1000, 1) + getSkill(currentPlayer, currentTimestamp / 1000, 2)\n            )}\n          </div>\n        </div>\n      </div>\n    {:else if tab === 2}\n      <div>\n        <div class=\"text-xl\">Equipment</div>\n        {#if currentPlayer.balances.filter((balance) => balance.item.id !== '1' && balance.item.id !== '2' && Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, balance.item.id)) > 0).length > 0}\n          {#each currentPlayer.balances.filter((balance) => balance.item.id !== '1' && balance.item.id !== '2' && Math.round(getBalanceStreamed(currentPlayer, currentTimestamp / 1000, balance.item.id)) > 0) as balance}\n            <div class=\"border-2\">\n              {balance.item.symbol}{balance.item.name}: {Math.round(\n                getBalanceStreamed(currentPlayer, currentTimestamp / 1000, balance.item.id)\n              )}\n            </div>\n          {/each}\n        {:else}\n          You don't own any equipment.\n        {/if}\n      </div>\n    {:else if tab === 3}\n      <Shop {currentPlayer} {balance} />\n    {:else if tab === 4}\n      <Crafting {currentPlayer} />\n    {:else if tab === 5}\n      <div>\n        <div class=\"text-xl\">\n          Vouching Rewards\n          <button class=\"border-2 border-gray-700\" on:click={() => (showModal = true)}>ℹ️</button>\n        </div>\n        <div class=\"p-1\">\n          <div class=\"text-left flex\">\n            <div class=\"font-bold\">Actual Vouch:</div>\n            <div class=\"flex\">\n              {roundGood(parseInt(currentPlayer.vouch) / 10 ** 18)}\n              <DaiSymbol />\n            </div>\n          </div>\n          <div class=\"text-left flex\">\n            <div class=\"font-bold\">Potential Vouch:</div>\n            <div class=\"flex\">\n              {roundGood(\n                (getSkill(currentPlayer, currentTimestamp / 1000, 1) +\n                  getSkill(currentPlayer, currentTimestamp / 1000, 2)) /\n                  10 ** 2\n              )}\n              <DaiSymbol />\n            </div>\n          </div>\n          <button class=\"border-2 bg-yellow-400 border-gray-500 p-1\" on:click={updateTrust}>Update</button>\n        </div>\n      </div>\n    {:else if tab === 6}\n      <div>\n        <div class=\"text-xl\">Players</div>\n        <div class=\"flex flex-col\">\n          {#each players as player}\n            <div class=\"flex justify-between p-1\">\n              <a rel=\"noopener\" target=\"_blank\" href={`https://kovan.union.finance/profile/${player.id}`}>\n                <div class=\"flex\">\n                  <Blockie address={player.id} class=\"h-6 w-6\" />\n                  {player.id.slice(0, 4)}...{player.id.slice(-4)}\n                </div>\n              </a>\n              <div>\n                <div class=\"inline font-medium\">Total level:</div>\n                {Math.round(\n                  getSkill(player, currentTimestamp / 1000, 1) + getSkill(player, currentTimestamp / 1000, 2)\n                )}\n              </div>\n            </div>\n            <div />\n          {/each}\n        </div>\n      </div>\n    {:else}\n      <div>\n        <div class=\"text-xl\">Settings</div>\n        <div>\n          {#if chainId === '1337'}\n            <div on:click={mint} class=\"border-2\">Mint free testnet DAI</div>\n          {/if}\n          <div on:click={approve} class=\"border-2\">Allow DAI transfers for The Shop</div>\n          <div on:click={approveNFT} class=\"border-2\">Allow NFT transfers for The Shop</div>\n        </div>\n      </div>\n    {/if}\n  </div>\n</div>\n","<script lang=\"ts\">\n  import {flow} from '$lib/blockchain/wallet';\n  import {distance, getItem, getPosition, getSkill, Player} from '$lib/player/player';\n  import Modal from '$lib/components/styled/Modal.svelte';\n  import {onMount} from 'svelte';\n\n  export let x: number;\n  export let y: number;\n  export let currentPlayer: Player | null;\n  export let showModal: boolean;\n\n  const SPEED_DIVISOR = 10;\n\n  const roundGood = (n: number) => Math.round(n * 10) / 10;\n\n  async function move(x, y) {\n    await flow.execute((contracts) => contracts.UnionQuest.move(x, y, {gasLimit: '100000'}));\n  }\n\n  let currentTimestamp = Date.now();\n\n  onMount(() => {\n    const interval = setInterval(() => {\n      currentTimestamp = Date.now();\n    }, 100);\n\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<div>\n  {#if showModal}\n    <Modal title={`Tile (${x},${y})`} on:close={() => (showModal = false)} closeButton={true}>\n      <div class=\"flex flex-col border-2 border-gray-400 text-center\">\n        <div class=\"p-2 border-2 border-gray-400 h-full\">\n          {#if currentPlayer}\n            <div class=\"p-1\">\n              <div>\n                This tile is {roundGood(\n                  distance(\n                    x,\n                    y,\n                    getPosition(currentPlayer, currentTimestamp / 1000)[0],\n                    getPosition(currentPlayer, currentTimestamp / 1000)[1]\n                  )\n                )} unit(s) from you.\n              </div>\n              <div>\n                It will take\n                <span class=\"font-bold\">\n                  {roundGood(\n                    SPEED_DIVISOR *\n                      distance(\n                        x,\n                        y,\n                        getPosition(currentPlayer, currentTimestamp / 1000)[0],\n                        getPosition(currentPlayer, currentTimestamp / 1000)[1]\n                      )\n                  )} seconds</span\n                >\n                to walk here.\n              </div>\n\n              <div>\n                {#if getItem(x, y) !== 0}\n                  Once you arrive, you will start gathering\n                  <span class=\"inline font-bold\">\n                    {getItem(x, y) === 1 ? '🪵' : '🪨'}\n                  </span>\n                  at a rate of\n                  <div class=\"inline font-bold\">\n                    {Math.round(getSkill(currentPlayer, currentTimestamp / 1000, getItem(x, y)))}\n                  </div>\n                  units/s.\n                {:else}\n                  There are no resources on this tile.\n                {/if}\n              </div>\n              <button\n                on:click={() => move(x, y)}\n                class=\"flex-shrink-0 bg-yellow-500 hover:bg-yellow-600 border-yellow-500 hover:border-yellow-600 text-sm border-4\n  text-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed m-1\"\n                type=\"button\"\n              >\n                MOVE HERE\n              </button>\n            </div>\n          {:else}\n            <div>You need to join the game first!</div>\n          {/if}\n          {#if x === 0 && y === 0}\n            <div class=\"italic\">This is the spawn tile. All new players enter the UnionQuest world from here.</div>\n          {/if}\n        </div>\n      </div>\n    </Modal>\n  {/if}\n</div>\n","<script lang=\"ts\">\n  import {getItem, getPosition, Player} from '$lib/player/player';\n  import {onMount} from 'svelte';\n  import TileModal from './TileModal.svelte';\n  import Blockie from '$lib/components/generic/CanvasBlockie.svelte';\n\n  // based on https://codepen.io/chengarda/pen/wRxoyB\n\n  export let players: Player[];\n  export let currentPlayer: Player | null;\n\n  const MIN_ZOOM = 25;\n  const MAX_ZOOM = 100;\n  const SCROLL_SENSITIVITY = 0.5;\n  let currentTimestamp = Date.now();\n\n  let canvas: HTMLCanvasElement;\n  let cameraZoom = 50;\n  let cameraOffset;\n  let isDragging = false;\n  let dragStart = {x: 0, y: 0};\n\n  let x;\n  let y;\n\n  let showModal = false;\n  let tiles = {};\n\n  const draw = () => {\n    canvas.width = window.innerWidth;\n    canvas.height = window.innerHeight;\n\n    let ctx = canvas.getContext('2d');\n\n    ctx.translate(window.innerWidth / 2, window.innerHeight / 2);\n    ctx.scale(cameraZoom, cameraZoom);\n    ctx.translate(-window.innerWidth / 2 + cameraOffset.x, -window.innerHeight / 2 + cameraOffset.y);\n    ctx.clearRect(0, 0, window.innerWidth, window.innerHeight);\n\n    ctx.strokeStyle = '#BBBBBB';\n\n    ctx.lineWidth = 0.01;\n    ctx.font = '1px Arial';\n    for (let i = -50; i < 50; i++) {\n      for (let j = -50; j < 50; j++) {\n        ctx.fillStyle = '#808080';\n        ctx.fillRect(i - 0.5, j - 0.5, 1, 1);\n        ctx.fillText('⛰️', i - 0.5, j + 0.5);\n      }\n    }\n\n    for (let i = -9; i < 11; i++) {\n      for (let j = -9; j < 11; j++) {\n        if (!tiles[i]) {\n          tiles[i] = {};\n        }\n        if (!tiles[i][j]) {\n          tiles[i][j] = getItem(i, j);\n        }\n        if (i === 0 && j === 0) {\n          ctx.fillStyle = '#1CA3EC';\n          ctx.fillRect(i - 0.5, j - 0.5, 1, 1);\n          ctx.fillText('🏰', i - 0.5, j + 0.5);\n        } else if (tiles[i][j] === 1) {\n          ctx.fillStyle = '#22c55e';\n          ctx.fillRect(i - 0.5, j - 0.5, 1, 1);\n          ctx.fillText('🌲', i - 0.5, j + 0.5);\n        } else if (tiles[i][j] === 2) {\n          ctx.fillStyle = '#cd9575';\n          ctx.fillRect(i - 0.5, j - 0.5, 1, 1);\n          ctx.fillText('🪨', i - 0.5, j + 0.5);\n        } else {\n          ctx.fillStyle = '#59A608';\n          ctx.fillRect(i - 0.5, j - 0.5, 1, 1);\n        }\n        ctx.strokeRect(i - 0.5, j - 0.5, 1, 1);\n      }\n    }\n\n    ctx.lineWidth = 0.04;\n\n    if (currentPlayer) {\n      ctx.strokeStyle = '#FF0000';\n      ctx.strokeRect(parseInt(currentPlayer.endX) - 0.5, parseInt(currentPlayer.endY) - 0.5, 1, 1);\n    }\n\n    players.forEach((p) => {\n      const position = getPosition(p, currentTimestamp / 1000);\n      let img = document.getElementById(p.id);\n      ctx.drawImage(img, position[0] - 0.25, position[1] - 0.25, 0.5, 0.5);\n\n      ctx.strokeStyle = '#ffffff';\n      ctx.strokeRect(position[0] - 0.25, position[1] - 0.25, 0.5, 0.5);\n\n      if (position[0] === parseInt(p.endX) && position[1] === parseInt(p.endY)) {\n        if (getItem(parseInt(p.endX), parseInt(p.endY))) {\n          if (getItem(parseInt(p.endX), parseInt(p.endY)) === 1) {\n            ctx.fillText('🪓', position[0], position[1]);\n          } else {\n            ctx.fillText('⛏️', position[0], position[1]);\n          }\n        }\n      }\n    });\n\n    ctx.strokeStyle = '#0000FF';\n    ctx.strokeRect(x, y, 1, 1);\n  };\n\n  // Gets the relevant location from a mouse or single touch event\n  function getEventLocation(e) {\n    if (e.touches && e.touches.length == 1) {\n      return {x: e.touches[0].clientX, y: e.touches[0].clientY};\n    } else if (e.clientX && e.clientY) {\n      return {x: e.clientX, y: e.clientY};\n    }\n  }\n  function onDblClick() {\n    showModal = true;\n  }\n\n  function onPointerDown(e) {\n    isDragging = true;\n    dragStart.x = getEventLocation(e).x / cameraZoom - cameraOffset.x;\n    dragStart.y = getEventLocation(e).y / cameraZoom - cameraOffset.y;\n  }\n\n  function onPointerUp(e) {\n    isDragging = false;\n    initialPinchDistance = null;\n    lastZoom = cameraZoom;\n  }\n\n  function onPointerMove(e) {\n    if (isDragging) {\n      cameraOffset.x = getEventLocation(e).x / cameraZoom - dragStart.x;\n      cameraOffset.y = getEventLocation(e).y / cameraZoom - dragStart.y;\n    }\n\n    let rect = canvas.getBoundingClientRect();\n\n    x =\n      Math.floor(\n        (e.clientX - rect.left - window.innerWidth / 2) / cameraZoom + (window.innerWidth / 2 - cameraOffset.x) + 0.5\n      ) - 0.5;\n    y =\n      Math.floor(\n        (e.clientY - rect.left - window.innerHeight / 2) / cameraZoom + (window.innerHeight / 2 - cameraOffset.y) - 0.5\n      ) + 0.5;\n  }\n\n  function handleTouch(e, singleTouchHandler) {\n    if (e.touches.length == 1) {\n      singleTouchHandler(e);\n    } else if (e.type == 'touchmove' && e.touches.length == 2) {\n      isDragging = false;\n      handlePinch(e);\n    }\n  }\n\n  let initialPinchDistance = null;\n  let lastZoom = cameraZoom;\n\n  function handlePinch(e) {\n    e.preventDefault();\n\n    let touch1 = {x: e.touches[0].clientX, y: e.touches[0].clientY};\n    let touch2 = {x: e.touches[1].clientX, y: e.touches[1].clientY};\n\n    // This is distance squared, but no need for an expensive sqrt as it's only used in ratio\n    let currentDistance = (touch1.x - touch2.x) ** 2 + (touch1.y - touch2.y) ** 2;\n\n    if (initialPinchDistance == null) {\n      initialPinchDistance = currentDistance;\n    } else {\n      adjustZoom(null, currentDistance / initialPinchDistance);\n    }\n  }\n\n  function adjustZoom(zoomAmount, zoomFactor) {\n    if (!isDragging) {\n      if (zoomAmount) {\n        cameraZoom += zoomAmount;\n      } else if (zoomFactor) {\n        cameraZoom = zoomFactor * lastZoom;\n      }\n\n      cameraZoom = Math.min(cameraZoom, MAX_ZOOM);\n      cameraZoom = Math.max(cameraZoom, MIN_ZOOM);\n    }\n  }\n\n  onMount(() => {\n    cameraOffset = {x: window.innerWidth / 2, y: window.innerHeight / 2};\n\n    canvas.addEventListener('mousedown', onPointerDown);\n    canvas.addEventListener('touchstart', (e) => handleTouch(e, onPointerDown));\n    canvas.addEventListener('mouseup', onPointerUp);\n    canvas.addEventListener('touchend', (e) => handleTouch(e, onPointerUp));\n    canvas.addEventListener('mousemove', onPointerMove);\n    canvas.addEventListener('touchmove', (e) => handleTouch(e, onPointerMove));\n    canvas.addEventListener('wheel', (e) => adjustZoom(-e.deltaY * SCROLL_SENSITIVITY));\n    canvas.addEventListener('dblclick', onDblClick);\n\n    const interval = setInterval(() => {\n      currentTimestamp = Date.now();\n    }, 10);\n\n    function render() {\n      draw();\n      requestAnimationFrame(render);\n    }\n\n    requestAnimationFrame(render);\n    return () => {\n      clearInterval(interval);\n    };\n  });\n</script>\n\n<div>\n  <TileModal x={x + 0.5} y={y + 0.5} bind:showModal {currentPlayer} />\n  <canvas bind:this={canvas} />\n  {#each players as p}\n    <Blockie class=\"hidden\" address={p.id} />\n  {/each}\n</div>\n\n<style>\n  canvas {\n    width: 100%;\n    height: 100%;\n  }\n</style>\n","<script lang=\"ts\">\n  import WalletAccess from '$lib/blockchain/WalletAccess.svelte';\n  import {wallet, flow} from '$lib/blockchain/wallet';\n  import {players} from '$lib/player/players';\n  import PlayerInfo from '$lib/components/PlayerInfo.svelte';\n  import MapCanvas from '$lib/components/MapCanvas.svelte';\n  import NavButton from '$lib/components/styled/navigation/NavButton.svelte';\n  import {url} from '$lib/utils/url';\n  import MapCanvasWebGl from '$lib/components/MapCanvasWebGL.svelte';\n\n  async function join() {\n    await flow.execute((contracts) => contracts.UnionQuest.move(0, 0));\n  }\n</script>\n\n<symbol id=\"icon-spinner6\" viewBox=\"0 0 32 32\">\n  <path\n    d=\"M12 4c0-2.209 1.791-4 4-4s4 1.791 4 4c0 2.209-1.791 4-4 4s-4-1.791-4-4zM24.719 16c0 0 0 0 0 0 0-1.812 1.469-3.281 3.281-3.281s3.281 1.469 3.281 3.281c0 0 0 0 0 0 0 1.812-1.469 3.281-3.281 3.281s-3.281-1.469-3.281-3.281zM21.513 24.485c0-1.641 1.331-2.972 2.972-2.972s2.972 1.331 2.972 2.972c0 1.641-1.331 2.972-2.972 2.972s-2.972-1.331-2.972-2.972zM13.308 28c0-1.487 1.205-2.692 2.692-2.692s2.692 1.205 2.692 2.692c0 1.487-1.205 2.692-2.692 2.692s-2.692-1.205-2.692-2.692zM5.077 24.485c0-1.346 1.092-2.438 2.438-2.438s2.438 1.092 2.438 2.438c0 1.346-1.092 2.438-2.438 2.438s-2.438-1.092-2.438-2.438zM1.792 16c0-1.22 0.989-2.208 2.208-2.208s2.208 0.989 2.208 2.208c0 1.22-0.989 2.208-2.208 2.208s-2.208-0.989-2.208-2.208zM5.515 7.515c0 0 0 0 0 0 0-1.105 0.895-2 2-2s2 0.895 2 2c0 0 0 0 0 0 0 1.105-0.895 2-2 2s-2-0.895-2-2zM28.108 7.515c0 2.001-1.622 3.623-3.623 3.623s-3.623-1.622-3.623-3.623c0-2.001 1.622-3.623 3.623-3.623s3.623 1.622 3.623 3.623z\"\n  />\n</symbol>\n<WalletAccess>\n  {#if !$players.step}\n    <div>Messages not loaded</div>\n  {:else if $players.error}\n    <div>Error: {$players.error}</div>\n  {:else if $players.step === 'LOADING'}\n    <div>Loading Map...</div>\n  {:else if !$players.data}\n    <div>Players failed to load!</div>\n  {:else}\n    <!-- <MapCanvasWebGl /> -->\n    <MapCanvas\n      players={$players.data}\n      currentPlayer={$players.data.find((p) => ($wallet.address ? p.id === $wallet.address.toLowerCase() : false))}\n    />\n    <div class=\"relative\">\n      <div class=\"fixed bottom-0 left-0 m-2\">\n        <NavButton href={url('/')} label=\"Home\">\n          <svg xmlns=\"http://www.w3.org/2000/svg\" class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path\n              d=\"M10.707 2.293a1 1 0 00-1.414 0l-7 7a1 1 0 001.414 1.414L4 10.414V17a1 1 0 001 1h2a1 1 0 001-1v-2a1 1 0 011-1h2a1 1 0 011 1v2a1 1 0 001 1h2a1 1 0 001-1v-6.586l.293.293a1 1 0 001.414-1.414l-7-7z\"\n            />\n          </svg>\n        </NavButton>\n      </div>\n\n      <div class=\"fixed bottom-0 right-0 border-8 border-double border-gray-700 bg-gray-300 p-1\">\n        {#if $wallet.address && $players.data.find((p) => p.id === $wallet.address.toLowerCase())}\n          <PlayerInfo\n            players={$players.data}\n            currentPlayer={$players.data.find((p) =>\n              $wallet.address ? p.id === $wallet.address.toLowerCase() : false\n            )}\n          />\n        {:else}\n          <button\n            class=\"flex-shrink-0 bg-yellow-500 hover:bg-yellow-600 border-yellow-500 hover:border-yellow-600 text-xl border-4\n        text-white py-1 px-2 rounded disabled:bg-gray-400 disabled:border-gray-400 disabled:cursor-not-allowed\"\n            type=\"button\"\n            on:click={() => join()}>Click here to join the game!</button\n          >\n        {/if}\n      </div>\n    </div>\n  {/if}\n</WalletAccess>\n\n<style>\n  ::-webkit-input-placeholder {\n    /* Chrome/Opera/Safari */\n    color: gray;\n    opacity: 0.5;\n  }\n  ::-moz-placeholder {\n    /* Firefox 19+ */\n    color: gray;\n    opacity: 0.5;\n  }\n  :-ms-input-placeholder {\n    /* IE 10+ */\n    color: gray;\n    opacity: 0.5;\n  }\n  :-moz-placeholder {\n    /* Firefox 18- */\n    color: gray;\n    opacity: 0.5;\n  }\n  @media (prefers-color-scheme: dark) {\n    ::-webkit-input-placeholder {\n      /* Chrome/Opera/Safari */\n      color: pink;\n      opacity: 0.5;\n    }\n    ::-moz-placeholder {\n      /* Firefox 19+ */\n      color: pink;\n      opacity: 0.5;\n    }\n    :-ms-input-placeholder {\n      /* IE 10+ */\n      color: pink;\n      opacity: 0.5;\n    }\n    :-moz-placeholder {\n      /* Firefox 18- */\n      color: pink;\n      opacity: 0.5;\n    }\n  }\n</style>\n"],"names":["defaultExchanges","Client","concat","fromValue","map","scan","subscribe","console","SPEED_DIVISOR","BigNumber"],"mappings":"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"}